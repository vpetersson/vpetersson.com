[
  {
    "sentence": "So DependencyTrack was the reason why we adopted SBOMs in the first place.",
    "startTime": "00:00",
    "endTime": "00:03",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "We didn't use it before.",
    "startTime": "00:03",
    "endTime": "00:04",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Yeah.",
    "startTime": "00:05",
    "endTime": "00:06",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "But for us we basically used I think a Maven plugin back in the day or a PHP plugin.",
    "startTime": "00:06",
    "endTime": "00:12",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "So you were a Java shop?",
    "startTime": "00:12",
    "endTime": "00:13",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "Mostly, yeah, but also PHP, JavaScript, a little bit of everything.",
    "startTime": "00:13",
    "endTime": "00:14",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Luckily there were plugins available for build managers or package managers at that time, so integrating that was quite easy to do for us.",
    "startTime": "00:17",
    "endTime": "00:25",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "So we ended up generating SBOMs for every single build, upload them to DependencyTrack and then went from there.",
    "startTime": "00:25",
    "endTime": "00:31",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Basically it was quite straightforward.",
    "startTime": "00:31",
    "endTime": "00:33",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Welcome back to another episode of Nerding Out with Viktor.",
    "startTime": "00:35",
    "endTime": "00:38",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "Today I'm joined by Niklas Düster.",
    "startTime": "00:38",
    "endTime": "00:40",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "Welcome to the show, Niklas.",
    "startTime": "00:40",
    "endTime": "00:41",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "Thank you.",
    "startTime": "00:41",
    "endTime": "00:42",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Thank you so much for having me.",
    "startTime": "00:42",
    "endTime": "00:43",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Very much.",
    "startTime": "00:43",
    "endTime": "00:44",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "So this is kind of like almost a part two to my episode with Steve Springett where we talked about all things cyclondx and all things SBOMs, really?",
    "startTime": "00:44",
    "endTime": "00:46",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "So this is kind of like almost a part two to my episode with Steve Springett where we talked about all things cyclondx and all things SBOMs, really?",
    "startTime": "00:46",
    "endTime": "00:56",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "And you are the maintainer of dependencytrack.",
    "startTime": "00:56",
    "endTime": "01:00",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "And let's maybe for those not familiar with yourself and DependencyTrack, let's start off with who's Niklas?",
    "startTime": "01:00",
    "endTime": "01:08",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "What should we know?",
    "startTime": "01:08",
    "endTime": "01:09",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "Okay, so hi, I'm Niklas.",
    "startTime": "01:09",
    "endTime": "01:12",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "I live in Germany.",
    "startTime": "01:12",
    "endTime": "01:13",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "I am German, of course.",
    "startTime": "01:14",
    "endTime": "01:15",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "I'm the co leader of the OWASP DependencyTrack project.",
    "startTime": "01:16",
    "endTime": "01:18",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "As Victor already teased at, I co lead this project together with Steve Springett, who is also the original creator of the project.",
    "startTime": "01:18",
    "endTime": "01:24",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "I'm also involved in the Cyclone DX project, which is a closely related effort in the OWASP Foundation.",
    "startTime": "01:25",
    "endTime": "01:30",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "I maintain the Go Library and the Go SBOM generator for that project.",
    "startTime": "01:31",
    "endTime": "01:35",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "In my day job I'm a contractor for a financial institution.",
    "startTime": "01:36",
    "endTime": "01:39",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "I mostly work with DependencyTrack there as well.",
    "startTime": "01:39",
    "endTime": "01:41",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Before that I was a security engineer for a European payment service provider.",
    "startTime": "01:42",
    "endTime": "01:46",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Did everything from AppSec to incident response, developer education, and so on and so forth.",
    "startTime": "01:46",
    "endTime": "01:51",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "When it comes to DependencyTrack itself.",
    "startTime": "01:53",
    "endTime": "01:54",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Sorry, did I.",
    "startTime": "01:54",
    "endTime": "01:55",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "No, no, go ahead.",
    "startTime": "01:55",
    "endTime": "01:56",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "No, I was going to say.",
    "startTime": "01:56",
    "endTime": "01:57",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "Yeah, perfect.",
    "startTime": "01:57",
    "endTime": "01:59",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "Yeah.",
    "startTime": "01:59",
    "endTime": "01:59",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "So DependencyTrack itself, it's mainly an SBOM platform or a BOM platform, if you will.",
    "startTime": "01:59",
    "endTime": "02:05",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "You can upload sboms or any kinds of bills of materials.",
    "startTime": "02:05",
    "endTime": "02:09",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "DependencyTrack will analyze them for various types of risks, which of course includes vulnerabilities, but also license compliance, component age, whatever have you.",
    "startTime": "02:09",
    "endTime": "02:17",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "We can also generate sboms in certain cases or other artifacts like VEX files, VDR reports, whatever have you.",
    "startTime": "02:19",
    "endTime": "02:26",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Yeah, but dependencytrack as a core is a BOM ingestion and analysis platform.",
    "startTime": "02:26",
    "endTime": "02:31",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Very cool.",
    "startTime": "02:32",
    "endTime": "02:33",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "So we met in person.",
    "startTime": "02:33",
    "endTime": "02:34",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "It's About a month or so ago in Barcelona for the.",
    "startTime": "02:34",
    "endTime": "02:37",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "As part of the AppSec conference, where we had a T conference, the Transparency Exchange API.",
    "startTime": "02:39",
    "endTime": "02:46",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "And you were part of that, helping out, kind of shaping that out.",
    "startTime": "02:46",
    "endTime": "02:48",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "So it was really good to meet you in person there.",
    "startTime": "02:48",
    "endTime": "02:50",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "And that's kind of why I wanted to invite you on the show and do a deep dive on DependencyTrack, because I think there's a lot to uncover there.",
    "startTime": "02:50",
    "endTime": "02:56",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "But how did you get involved with DependencyTrack in the first place?",
    "startTime": "02:56",
    "endTime": "03:01",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "What led you down that path?",
    "startTime": "03:01",
    "endTime": "03:02",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "Oh, that's fun because I think it's the typical way that you get involved with open source projects.",
    "startTime": "03:02",
    "endTime": "03:06",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Right.",
    "startTime": "03:06",
    "endTime": "03:07",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "I mentioned I was security engineer before the payment service company and were of course tasked with finding vulnerabilities in components that the company uses.",
    "startTime": "03:07",
    "endTime": "03:16",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "At the time we used dependency check.",
    "startTime": "03:17",
    "endTime": "03:19",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "So every single pipeline of our products ran this tool, it generated an HTML report and then we as the security team had to go to every single pipeline, look at that report, and then check for false positives, etc.",
    "startTime": "03:19",
    "endTime": "03:32",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "And at some point we just thought, this doesn't scale anymore.",
    "startTime": "03:32",
    "endTime": "03:34",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "And this was, I think, 2018.",
    "startTime": "03:35",
    "endTime": "03:36",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "So we did some research and then found the efforts of Steve Springett, who was just in the process of releasing or evolving DependencyTrack Publishing Cyclone DX as an alternative.",
    "startTime": "03:37",
    "endTime": "03:47",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "So we ended up adopting that.",
    "startTime": "03:49",
    "endTime": "03:50",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "And while were playing with the tool, implementing it in our pipelines, we noticed some things were missing.",
    "startTime": "03:51",
    "endTime": "03:56",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "We would like to have OpenID Connect, for example, so we didn't have to manage our own users all the time.",
    "startTime": "03:56",
    "endTime": "04:01",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "I end up implementing that, contributing it, I contributed more and more, and at some point Steve just said, hey, why don't you just join the project and help me out here?",
    "startTime": "04:03",
    "endTime": "04:10",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Good stuff.",
    "startTime": "04:12",
    "endTime": "04:13",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "So obviously, having worn the security hats in companies before, you're no stranger to SBOMs.",
    "startTime": "04:13",
    "endTime": "04:19",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "Or were you actually using SBOMs at that point?",
    "startTime": "04:19",
    "endTime": "04:21",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "I mean, what did that security journey look like?",
    "startTime": "04:22",
    "endTime": "04:25",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "You said 2018.",
    "startTime": "04:25",
    "endTime": "04:26",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "That's kind of early days of SBOMs were there, like how that looked like back then.",
    "startTime": "04:26",
    "endTime": "04:31",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "So DependencyTrack was the reason why we adopted SBOMs in the first place.",
    "startTime": "04:32",
    "endTime": "04:35",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "We didn't use it before.",
    "startTime": "04:35",
    "endTime": "04:36",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Yeah, but for us we basically used I think a Maven plugin back in the day or a PHP plugin.",
    "startTime": "04:37",
    "endTime": "04:44",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "So you were a Java shop?",
    "startTime": "04:44",
    "endTime": "04:44",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "Mostly, yeah, but also PHP, JavaScript, a little bit of everything.",
    "startTime": "04:45",
    "endTime": "04:48",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Luckily there were plugins available for build managers or package managers at that time, so integrating that was quite easy to do for us.",
    "startTime": "04:49",
    "endTime": "04:56",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "So we ended up generating SBOMs for every single build, upload them to DependencyTrack and then went from there.",
    "startTime": "04:57",
    "endTime": "05:03",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Basically it was quite straightforward.",
    "startTime": "05:03",
    "endTime": "05:04",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "And if I may add, that as well.",
    "startTime": "05:06",
    "endTime": "05:09",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "So one of the biggest successes that we had was during the time of log 4J where everyone was just scrambling around.",
    "startTime": "05:09",
    "endTime": "05:16",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "So one of my colleagues ended up finding the announcement of log 4J of the vulnerability essentially on Twitter before there was a CVE for it.",
    "startTime": "05:17",
    "endTime": "05:24",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "And while everyone else was kind of scrambling, hey, where do we use log4j?",
    "startTime": "05:25",
    "endTime": "05:29",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "We were just able to go to DependencyTrack, search for that library name, and at least for the projects that generated SBoMS at the time, were able to immediately find where it was used, fix it.",
    "startTime": "05:29",
    "endTime": "05:40",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "I mean, that's a success story, right?",
    "startTime": "05:41",
    "endTime": "05:42",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "That's exactly like, I think post Log4j and the likes off.",
    "startTime": "05:42",
    "endTime": "05:47",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "Right.",
    "startTime": "05:47",
    "endTime": "05:47",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "That was when a lot of companies realized like, holy shit, we have no idea what goes into our software stack.",
    "startTime": "05:47",
    "endTime": "05:53",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "Right?",
    "startTime": "05:53",
    "endTime": "05:54",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "Yeah.",
    "startTime": "05:54",
    "endTime": "05:54",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "And it goes back to like the use case for how people want SBoM.",
    "startTime": "05:55",
    "endTime": "05:58",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "That is usually one of the things where people like there is a sense of urgency because this is not the last time this will happen.",
    "startTime": "05:59",
    "endTime": "06:05",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "This was the wake up call.",
    "startTime": "06:05",
    "endTime": "06:07",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "But it will certainly happen again.",
    "startTime": "06:07",
    "endTime": "06:08",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "Maybe not in that same domain, but somewhere in your stack.",
    "startTime": "06:08",
    "endTime": "06:11",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "Right?",
    "startTime": "06:11",
    "endTime": "06:12",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "For sure, yes.",
    "startTime": "06:12",
    "endTime": "06:13",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "So DependencyTrack, great tool for analyzing an SBoM, essentially.",
    "startTime": "06:14",
    "endTime": "06:20",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "Talk me through kind of how people use DependencyTrack.",
    "startTime": "06:22",
    "endTime": "06:27",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "You mentioned in your example you used in a CI CD pipeline.",
    "startTime": "06:27",
    "endTime": "06:31",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "Is that the normal case where people basically upload SBOMs from their CI CD pipeline straight into DependencyTrack.",
    "startTime": "06:31",
    "endTime": "06:37",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "Is that the workflow usually you usually see?",
    "startTime": "06:37",
    "endTime": "06:40",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "Yeah, that's the most prominent workflow, I would say.",
    "startTime": "06:40",
    "endTime": "06:42",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "It's also the most straightforward to set up given you already have a CI CD infrastructure.",
    "startTime": "06:42",
    "endTime": "06:47",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Right.",
    "startTime": "06:47",
    "endTime": "06:47",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "We also have seen shops that have or security teams that run separate pipelines where they basically pull in all the repositories their company has or iterate over their GitLab instance, whatever else, and then run a generic SBoM generation tool.",
    "startTime": "06:48",
    "endTime": "07:00",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Right.",
    "startTime": "07:00",
    "endTime": "07:01",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Like CDX Gen, for example, is one.",
    "startTime": "07:01",
    "endTime": "07:03",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Other people might use Sift or Trivi and then upload those SBOMs in bulk, let's say every.",
    "startTime": "07:03",
    "endTime": "07:08",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Every day, every week, whatever.",
    "startTime": "07:08",
    "endTime": "07:09",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "So that is another workflow we know of.",
    "startTime": "07:10",
    "endTime": "07:12",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "People who manually are upload sboms, for example, for mergers and acquisitions, if you buy a company, you may ask them, hey, like, what is your maturity?",
    "startTime": "07:12",
    "endTime": "07:21",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Like, can you provide an S BOM for us?",
    "startTime": "07:21",
    "endTime": "07:23",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "We can analyze what you have.",
    "startTime": "07:23",
    "endTime": "07:24",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "So people end uploading SBOMs manually there?",
    "startTime": "07:25",
    "endTime": "07:28",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Yeah, more like a one off operation than yes.",
    "startTime": "07:30",
    "endTime": "07:33",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "Most of the time, yes and yeah.",
    "startTime": "07:33",
    "endTime": "07:36",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Interesting so let's walk me through, let's take a step further.",
    "startTime": "07:36",
    "endTime": "07:40",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "Further in that step.",
    "startTime": "07:40",
    "endTime": "07:41",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "Right.",
    "startTime": "07:41",
    "endTime": "07:41",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "So I've heard of companies in the financial sector, for instance, that heavily rely on DependencyTrack for vulnerability management.",
    "startTime": "07:41",
    "endTime": "07:49",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "They even integrate it in their deployment pipelines.",
    "startTime": "07:51",
    "endTime": "07:54",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "So not only do their CICD pipeline kind of send S pumps to DependencyTrack, but also they gate deployments based on the output of DependencyTrack.",
    "startTime": "07:54",
    "endTime": "08:05",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "Right.",
    "startTime": "08:05",
    "endTime": "08:06",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "And that opens up an interesting conversation because I'm curious about what your view on that is because there are.",
    "startTime": "08:07",
    "endTime": "08:14",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "Just because the predator track found the vulnerability today doesn't mean it wasn't there yesterday on the last deploy.",
    "startTime": "08:16",
    "endTime": "08:21",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "But all of a sudden now you're gating deployments.",
    "startTime": "08:21",
    "endTime": "08:23",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "How do you see kind of like, I guess the output being used and how to best leverage that to kind of gate against.",
    "startTime": "08:24",
    "endTime": "08:32",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "I mean, just because.",
    "startTime": "08:33",
    "endTime": "08:34",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "Halting the deployment process just because you found the vulnerability necessarily not the best approach.",
    "startTime": "08:36",
    "endTime": "08:39",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "So I'm curious but like what you see in terms of best practices, how to use these tools.",
    "startTime": "08:39",
    "endTime": "08:43",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "Okay, so first off, I would really not recommend to block like a deployment process just because a tool found something.",
    "startTime": "08:44",
    "endTime": "08:50",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "You can use that as a warning signal and you can probably have someone being notified about that to look into it.",
    "startTime": "08:50",
    "endTime": "08:55",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "But really as security team, if you block hotfix deployments, for example, people are going to hate you.",
    "startTime": "08:55",
    "endTime": "09:01",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Like that is just straight up the reality.",
    "startTime": "09:01",
    "endTime": "09:03",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "So just please do not do it.",
    "startTime": "09:04",
    "endTime": "09:06",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "And of course, even tools or tools like DependencyTrack, they can have false positives, they can have bugs, sometimes it is again, I would not rely on those tools to block deployments.",
    "startTime": "09:06",
    "endTime": "09:17",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Block CI builds, sure, do it if you want, but don't fail.",
    "startTime": "09:17",
    "endTime": "09:22",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Yeah, yeah.",
    "startTime": "09:22",
    "endTime": "09:22",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "As soon as you can, like fail things.",
    "startTime": "09:23",
    "endTime": "09:25",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Entering master, of course, or main.",
    "startTime": "09:25",
    "endTime": "09:27",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "The main branch.",
    "startTime": "09:27",
    "endTime": "09:28",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Right.",
    "startTime": "09:28",
    "endTime": "09:28",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "But don't block deployments.",
    "startTime": "09:28",
    "endTime": "09:29",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "That, that would be my first recommendation.",
    "startTime": "09:29",
    "endTime": "09:31",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "I think the biggest value of DependencyTrack is really also in the name track.",
    "startTime": "09:31",
    "endTime": "09:36",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "You upload the SBoM you deploy and then while the application runs in your environment, DependencyTrack keeps reanalyzing that bom.",
    "startTime": "09:36",
    "endTime": "09:45",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "And if it finds something, you are being notified and then you can act on it.",
    "startTime": "09:45",
    "endTime": "09:48",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "That's really the main use case I would say for dependencytrack and that's also what I would recommend to do.",
    "startTime": "09:48",
    "endTime": "09:53",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Right, okay, very good point.",
    "startTime": "09:54",
    "endTime": "09:56",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "Let's dive deeper into the pedestri track because I think I'm not the only one who.",
    "startTime": "09:56",
    "endTime": "10:03",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "When I first started using the pedest track, I was a bit confused by.",
    "startTime": "10:03",
    "endTime": "10:07",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "There's a lot of terminology.",
    "startTime": "10:07",
    "endTime": "10:08",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "It's a complex product.",
    "startTime": "10:08",
    "endTime": "10:09",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "Right.",
    "startTime": "10:09",
    "endTime": "10:09",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "There's no doubt to that it is.",
    "startTime": "10:09",
    "endTime": "10:11",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "Right.",
    "startTime": "10:11",
    "endTime": "10:12",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "It has a lot of terminology that may mean different to different people.",
    "startTime": "10:12",
    "endTime": "10:17",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "Right.",
    "startTime": "10:17",
    "endTime": "10:17",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "Like maybe I don't put you on spot, but like can you go over the building blocks of DependencyTrack.",
    "startTime": "10:17",
    "endTime": "10:24",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "How to best use it and set it up from zero, how you track projects, what are the best practices really?",
    "startTime": "10:25",
    "endTime": "10:31",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "Okay, so let's start with the building blocks.",
    "startTime": "10:31",
    "endTime": "10:33",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "The first major building block is your portfolio.",
    "startTime": "10:34",
    "endTime": "10:36",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "And the portfolio is just a collection of all your projects.",
    "startTime": "10:36",
    "endTime": "10:41",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "A project then is basically what you would describe in let's say an SBoM.",
    "startTime": "10:41",
    "endTime": "10:45",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Right?",
    "startTime": "10:45",
    "endTime": "10:46",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "It's your application.",
    "startTime": "10:46",
    "endTime": "10:47",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "It could be a hardware piece, whatever have you, and then within that project you have components and this could be like your third party libraries, your first party libraries.",
    "startTime": "10:47",
    "endTime": "10:55",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Again, whatever else.",
    "startTime": "10:56",
    "endTime": "10:58",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Sorry, are components the same as components in an SBOM?",
    "startTime": "10:58",
    "endTime": "11:02",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "Or components are your top level component, so to speak in CycloneDX terminology.",
    "startTime": "11:02",
    "endTime": "11:08",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "And then.",
    "startTime": "11:09",
    "endTime": "11:09",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "Or like how does that matter?",
    "startTime": "11:10",
    "endTime": "11:11",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "Because that's the problem that we've had the same conversation in the TEA project.",
    "startTime": "11:11",
    "endTime": "11:15",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "Right?",
    "startTime": "11:15",
    "endTime": "11:15",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Like what's the component?",
    "startTime": "11:15",
    "endTime": "11:16",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "Because there are.",
    "startTime": "11:16",
    "endTime": "11:17",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "So definition of what a component is, Right?",
    "startTime": "11:17",
    "endTime": "11:19",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "It is a very generic term to be fair.",
    "startTime": "11:19",
    "endTime": "11:21",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Yes.",
    "startTime": "11:21",
    "endTime": "11:21",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "So how you map it to Cyclone DX is in Cyclone DX you have this metadata section, every bom and that metadata dot Component.",
    "startTime": "11:21",
    "endTime": "11:29",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Top level component.",
    "startTime": "11:30",
    "endTime": "11:30",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "Yes, top level component.",
    "startTime": "11:30",
    "endTime": "11:32",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "That is basically what you would map to a project DependencyTrackDependencyTrack.",
    "startTime": "11:32",
    "endTime": "11:35",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "And then everything in the components array of a Cyclone DX bill of materials would then be your list of components.",
    "startTime": "11:35",
    "endTime": "11:43",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Okay, now I'm with you.",
    "startTime": "11:45",
    "endTime": "11:45",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "Okay, A bit confusing, but yeah.",
    "startTime": "11:45",
    "endTime": "11:49",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "It kind of DependencyTrack evolved side by side with SiteGroundX.",
    "startTime": "11:49",
    "endTime": "11:53",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "So it's not like the standard already existed and we could implement it one to one.",
    "startTime": "11:53",
    "endTime": "11:56",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "DependencyTrack, right, yeah.",
    "startTime": "11:56",
    "endTime": "11:58",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "There's also this little wrinkle here where if you upload a bom to DependencyTrack, the name of your top level component is not automatically set as your project name.",
    "startTime": "11:58",
    "endTime": "12:08",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Right.",
    "startTime": "12:09",
    "endTime": "12:09",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Because you can create a project ahead of time and then upload a BOM to it.",
    "startTime": "12:09",
    "endTime": "12:12",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Right.",
    "startTime": "12:13",
    "endTime": "12:14",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "And again people might want like human readable names in their projects.",
    "startTime": "12:14",
    "endTime": "12:18",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Whereas in the SBOM it says Company X stats component.",
    "startTime": "12:18",
    "endTime": "12:23",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Yeah, yeah.",
    "startTime": "12:23",
    "endTime": "12:24",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "So there's this part.",
    "startTime": "12:24",
    "endTime": "12:26",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Yeah, but yeah, you have portfolio, list of projects and then within the project you have components.",
    "startTime": "12:26",
    "endTime": "12:31",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Now every single component can have vulnerabilities.",
    "startTime": "12:32",
    "endTime": "12:34",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "They can have what we call internally policy violations.",
    "startTime": "12:35",
    "endTime": "12:39",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "So you can set up DependencyTrack, certain conditions for which we will then flag the component.",
    "startTime": "12:39",
    "endTime": "12:44",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "One example of a policy would be users copy left license or Uses non copyleft license.",
    "startTime": "12:44",
    "endTime": "12:53",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "If we detect that, we will flag something that is visible in the UI and that you can then take action on.",
    "startTime": "12:53",
    "endTime": "13:00",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Yeah, I mentioned findings.",
    "startTime": "13:01",
    "endTime": "13:03",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "The vulnerability findings are there.",
    "startTime": "13:03",
    "endTime": "13:05",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "We track.",
    "startTime": "13:06",
    "endTime": "13:07",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "So we mirror vulnerability databases, we mirror the NVD, we mirror optionally GitHub advisories and OSV.",
    "startTime": "13:07",
    "endTime": "13:13",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "You can view all of these things in the UI and you can also backtrack.",
    "startTime": "13:15",
    "endTime": "13:18",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "So if you search for a CVE, you can look up, hey, which project or which component is affected by that CVE.",
    "startTime": "13:18",
    "endTime": "13:24",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "For most things there are multiple ways to arrive at the same conclusion, if you will.",
    "startTime": "13:26",
    "endTime": "13:30",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Yeah, let's double down a little bit on licensing because that's a hot topic and B a complicated topic.",
    "startTime": "13:30",
    "endTime": "13:39",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "Right?",
    "startTime": "13:39",
    "endTime": "13:39",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "Because obviously you have the simple example of like this is Apache license.",
    "startTime": "13:39",
    "endTime": "13:44",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "Cool, that's easy.",
    "startTime": "13:44",
    "endTime": "13:45",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "But then we have far more complicated examples of license expressions, right, where you have multiple things how you built an engine around that.",
    "startTime": "13:45",
    "endTime": "13:54",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "Because what does copyleft mean when you have these really complicated expressions which might have custom licenses and whatnot as well?",
    "startTime": "13:54",
    "endTime": "14:03",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "How does that engine actually work behind the scenes?",
    "startTime": "14:04",
    "endTime": "14:06",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "Good question.",
    "startTime": "14:08",
    "endTime": "14:08",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "So the core engine really is quite simplistic.",
    "startTime": "14:09",
    "endTime": "14:11",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "So in SiteGroundX you can have an array of licenses and you can have, of course, license expressions.",
    "startTime": "14:11",
    "endTime": "14:18",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "The core engine of DependencyTrack mainly focuses on the license objects where the ID is known.",
    "startTime": "14:19",
    "endTime": "14:25",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "So the SPDX ID is known and we can flag based on that.",
    "startTime": "14:25",
    "endTime": "14:28",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "We do support expressions, but the expressions are then evaluated at runtime, basically.",
    "startTime": "14:28",
    "endTime": "14:34",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "So every time you check for a policy, we have to step through that expression and then check if your policy would be violated by the concluded license of that expression.",
    "startTime": "14:34",
    "endTime": "14:46",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Okay, yeah.",
    "startTime": "14:47",
    "endTime": "14:48",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "Okay, yeah.",
    "startTime": "14:48",
    "endTime": "14:49",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "So because that's hard to know ahead of time, like do that calculation.",
    "startTime": "14:49",
    "endTime": "14:51",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "Right.",
    "startTime": "14:51",
    "endTime": "14:52",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "So you have to essentially do it on the.",
    "startTime": "14:52",
    "endTime": "14:54",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "At a calculator at runtime.",
    "startTime": "14:54",
    "endTime": "14:55",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "Interesting.",
    "startTime": "14:55",
    "endTime": "14:56",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "But it is definitely something that we want to improve on.",
    "startTime": "14:56",
    "endTime": "14:58",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Right?",
    "startTime": "14:58",
    "endTime": "14:58",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Because ideally you can click on every single license in that expression or even the conclude license would be displayed in the UI for you.",
    "startTime": "14:59",
    "endTime": "15:05",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "So you can make your.",
    "startTime": "15:05",
    "endTime": "15:06",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Or no, sorry.",
    "startTime": "15:08",
    "endTime": "15:09",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "So the expression, sometimes you get the choice between multiple licenses, right?",
    "startTime": "15:09",
    "endTime": "15:13",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Because it.",
    "startTime": "15:13",
    "endTime": "15:13",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Or mit.",
    "startTime": "15:14",
    "endTime": "15:15",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "And really to make an informed decision about whether this is a problem for you, someone needs to step up and say, I want choosing Apache 2 or I'm choosing MIT or whatever.",
    "startTime": "15:15",
    "endTime": "15:24",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Right.",
    "startTime": "15:24",
    "endTime": "15:25",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Someone needs to make this decision.",
    "startTime": "15:25",
    "endTime": "15:26",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "This is something we want to.",
    "startTime": "15:27",
    "endTime": "15:28",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Or matching your criteria that you're looking up for, like is it compatible with my expression?",
    "startTime": "15:28",
    "endTime": "15:32",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "Or my, my criteria.",
    "startTime": "15:32",
    "endTime": "15:34",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "Right, correct.",
    "startTime": "15:34",
    "endTime": "15:35",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "One of those two.",
    "startTime": "15:35",
    "endTime": "15:36",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "Right.",
    "startTime": "15:36",
    "endTime": "15:36",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "But yeah, it Gets a lot more complicated.",
    "startTime": "15:36",
    "endTime": "15:38",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "Right.",
    "startTime": "15:38",
    "endTime": "15:38",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "I think people are new to the SBOM world or are up for a world of pain when you start to realize how complicated this can get, right?",
    "startTime": "15:38",
    "endTime": "15:45",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "Oh yes.",
    "startTime": "15:45",
    "endTime": "15:46",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Can get, yes.",
    "startTime": "15:46",
    "endTime": "15:47",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "And so you have this.",
    "startTime": "15:49",
    "endTime": "15:51",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "And I guess one obvious thing is, at least to me, is when you run this in production, you start chucking S boms.",
    "startTime": "15:51",
    "endTime": "16:00",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "Imagine you're a mid sized shop and you might deploy every day.",
    "startTime": "16:00",
    "endTime": "16:05",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "Like maybe you deploy multiple times a day for every single microservice.",
    "startTime": "16:05",
    "endTime": "16:08",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "You have a new SBOM every time you deploy.",
    "startTime": "16:09",
    "endTime": "16:11",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "Right.",
    "startTime": "16:11",
    "endTime": "16:11",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "That directory of SBOMs becomes very large very quickly.",
    "startTime": "16:13",
    "endTime": "16:18",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "How, if you're going to run queries against that and vulnerability checks against that, how have you solved a the scalability side of that?",
    "startTime": "16:19",
    "endTime": "16:28",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "Because that's the sheer data.",
    "startTime": "16:28",
    "endTime": "16:29",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "Like we could talk like gigabytes or terabytes of SBOMs.",
    "startTime": "16:29",
    "endTime": "16:34",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "Right.",
    "startTime": "16:34",
    "endTime": "16:34",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "And sifting through that is very expensive.",
    "startTime": "16:34",
    "endTime": "16:36",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "Talk me through the architectural decisions of how you scale DependencyTrack, really for the real world.",
    "startTime": "16:37",
    "endTime": "16:42",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "So there are two parts.",
    "startTime": "16:43",
    "endTime": "16:45",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "There's currently the major version 4 of DependencyTrack that most people use.",
    "startTime": "16:45",
    "endTime": "16:48",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "We are currently working on a version 5 that addresses some of these scalability issues that we identified.",
    "startTime": "16:48",
    "endTime": "16:53",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "But you mentioned microservices and deploy multiple times a day potentially.",
    "startTime": "16:55",
    "endTime": "16:59",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "One thing to Note first about DependencyTrack is DependencyTrack does not store the raw SBoM.",
    "startTime": "17:02",
    "endTime": "17:07",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Dependency Check is a processing platform, which means it takes information out of the SBOM and then ingests or stores just this information in its database.",
    "startTime": "17:08",
    "endTime": "17:15",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Even if you have like, let's say 1 gigabyte sbom file.",
    "startTime": "17:16",
    "endTime": "17:19",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Right.",
    "startTime": "17:19",
    "endTime": "17:19",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "I hope you don't.",
    "startTime": "17:19",
    "endTime": "17:20",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "But if you have Depends guys, they do.",
    "startTime": "17:20",
    "endTime": "17:24",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Oh my God.",
    "startTime": "17:24",
    "endTime": "17:25",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Yeah.",
    "startTime": "17:25",
    "endTime": "17:25",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Poor souls.",
    "startTime": "17:26",
    "endTime": "17:27",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "So even if you have a large SBOM like that, not all of this information might be relevant to DT or to DependencyTrack.",
    "startTime": "17:28",
    "endTime": "17:33",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "So we might end up just storing subsection or sub some of this information.",
    "startTime": "17:33",
    "endTime": "17:40",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "So you don't really acquire a huge amount of data even if you upload many sboms.",
    "startTime": "17:41",
    "endTime": "17:49",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Yeah, because I guess you could deduplicate most of the data.",
    "startTime": "17:50",
    "endTime": "17:53",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "Right?",
    "startTime": "17:53",
    "endTime": "17:54",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "Yeah, that's also another point.",
    "startTime": "17:54",
    "endTime": "17:55",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Like the quality of some SBOMs is really all over the place.",
    "startTime": "17:55",
    "endTime": "17:58",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Some are just broken.",
    "startTime": "17:58",
    "endTime": "17:59",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "If you just insert them into your database and make them searchable like this, people will have a very bad experience finding stuff.",
    "startTime": "17:59",
    "endTime": "18:05",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "But yeah, it's mostly just a database, a relational database.",
    "startTime": "18:06",
    "endTime": "18:10",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Behind the scenes components have their own table, projects have their own table, obviously vulnerabilities, etc.",
    "startTime": "18:10",
    "endTime": "18:16",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "And this really works quite well.",
    "startTime": "18:17",
    "endTime": "18:19",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "The biggest bottleneck that we had in version 4 is mostly around processing of things.",
    "startTime": "18:20",
    "endTime": "18:26",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "So if you upload a large SBoM that needs to be validated, it needs to be parsed and converted to internal model and analysis needs to happen in various forms.",
    "startTime": "18:26",
    "endTime": "18:35",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Right.",
    "startTime": "18:35",
    "endTime": "18:35",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Could be vulnerability analysis, license, whatever else.",
    "startTime": "18:35",
    "endTime": "18:37",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "These are all asynchronous, quite IO heavy tasks in some way.",
    "startTime": "18:38",
    "endTime": "18:42",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "And the version 4 architecture was basically an in memory event system.",
    "startTime": "18:43",
    "endTime": "18:48",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "So you could hammer the instance with lots of events, it would pile up in memory until it would be processed.",
    "startTime": "18:50",
    "endTime": "18:56",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "And that just has a limit.",
    "startTime": "18:56",
    "endTime": "18:58",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Right.",
    "startTime": "18:58",
    "endTime": "18:58",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "If you deploy hundreds of thousands of times per day, you know, you end up with a huge queue.",
    "startTime": "18:58",
    "endTime": "19:03",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Your memory usage goes all over the place.",
    "startTime": "19:03",
    "endTime": "19:05",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "So that is a problem that we are going to be addressing in version 5.",
    "startTime": "19:05",
    "endTime": "19:09",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Sorry.",
    "startTime": "19:09",
    "endTime": "19:09",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "We investigated or we first tried to use an external message broker.",
    "startTime": "19:12",
    "endTime": "19:17",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "In this case it was Kafka.",
    "startTime": "19:17",
    "endTime": "19:19",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "We separated out a few services.",
    "startTime": "19:19",
    "endTime": "19:21",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "For example, vulnerability analysis doesn't have to happen in the main instance of DependencyTrack.",
    "startTime": "19:21",
    "endTime": "19:26",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "So it was a separate service that could survive mostly without database access.",
    "startTime": "19:26",
    "endTime": "19:31",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "So it will also not hammer the database.",
    "startTime": "19:31",
    "endTime": "19:33",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "We then later on decided we need to scale this back just because the message broker itself is such a huge operational burden, especially for newcomers.",
    "startTime": "19:34",
    "endTime": "19:43",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "It's not a lean thing anymore.",
    "startTime": "19:43",
    "endTime": "19:45",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "Yeah, correct.",
    "startTime": "19:45",
    "endTime": "19:46",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "So now we will be dialing back to only requiring a Postgres database in version 5.",
    "startTime": "19:46",
    "endTime": "19:51",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "And we will like all the messaging asynchronous stuff will happen on a separate database if you so wish.",
    "startTime": "19:52",
    "endTime": "19:57",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Like you can run the main application one database, scale that up to whatever data requirements you have and then for like all the messaging stuff, you can deploy a separate smaller instance that just doesn't interfere with the main operations of the application anymore.",
    "startTime": "19:57",
    "endTime": "20:12",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "And this is optional.",
    "startTime": "20:13",
    "endTime": "20:14",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Yeah.",
    "startTime": "20:15",
    "endTime": "20:15",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "Does it scale horizontally though?",
    "startTime": "20:15",
    "endTime": "20:16",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "Because right now it's one big monolith.",
    "startTime": "20:16",
    "endTime": "20:19",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "Right?",
    "startTime": "20:19",
    "endTime": "20:19",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "Correct.",
    "startTime": "20:19",
    "endTime": "20:20",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Yes, it will scale horizontally and it already does.",
    "startTime": "20:20",
    "endTime": "20:23",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Like the version 5 that we have on GitHub right now already can scale horizontally and it does.",
    "startTime": "20:23",
    "endTime": "20:28",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Like we have a pretty huge user of that version already and it runs with three instances in production at the moment.",
    "startTime": "20:28",
    "endTime": "20:35",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Yeah, okay, fantastic.",
    "startTime": "20:35",
    "endTime": "20:37",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "No, it's a really cool project.",
    "startTime": "20:37",
    "endTime": "20:39",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "All right.",
    "startTime": "20:41",
    "endTime": "20:41",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "And you said postgres is where you store all the data sound choice.",
    "startTime": "20:41",
    "endTime": "20:45",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "Right.",
    "startTime": "20:45",
    "endTime": "20:45",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "So that makes it very battle tested.",
    "startTime": "20:45",
    "endTime": "20:48",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "All right, so we talked about SBOMs in decent track, but I think when we're speaking about DependencyTrack, one obvious thing we also need to talk about like what happens when a vulnerability is discovered.",
    "startTime": "20:49",
    "endTime": "21:02",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "Right.",
    "startTime": "21:02",
    "endTime": "21:02",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "Maybe we start the conversation but about talk about vex files and the likes of.",
    "startTime": "21:03",
    "endTime": "21:09",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "Right.",
    "startTime": "21:09",
    "endTime": "21:09",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "Like maybe for those unfamiliar, can you brief the audience on what are Vex files, how do they fit into the DependencyTrack ecosystem.",
    "startTime": "21:09",
    "endTime": "21:17",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "Okay, so VEX files are.",
    "startTime": "21:17",
    "endTime": "21:18",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Or VEX just means Vulnerability Exploitability Exchange.",
    "startTime": "21:18",
    "endTime": "21:21",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "It's an.",
    "startTime": "21:21",
    "endTime": "21:22",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "I would say it's an attempt of going.",
    "startTime": "21:22",
    "endTime": "21:25",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Making lights go off.",
    "startTime": "21:26",
    "endTime": "21:27",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "So whenever a vulnerability is found, a red light turns on in your UI.",
    "startTime": "21:27",
    "endTime": "21:30",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Basically speaking, a Vex file can then describe if a vulnerability is found.",
    "startTime": "21:31",
    "endTime": "21:35",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Is this actually exploitable?",
    "startTime": "21:35",
    "endTime": "21:36",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Is this something you have to worry about?",
    "startTime": "21:36",
    "endTime": "21:38",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "And ideally, these VEX files would come from the vendor of the software.",
    "startTime": "21:38",
    "endTime": "21:42",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Because.",
    "startTime": "21:42",
    "endTime": "21:42",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Because only they can know is this actually affecting that given piece of software?",
    "startTime": "21:42",
    "endTime": "21:47",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Right.",
    "startTime": "21:47",
    "endTime": "21:47",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "They can give various types of analyses, I think they're called.",
    "startTime": "21:48",
    "endTime": "21:52",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Or states.",
    "startTime": "21:52",
    "endTime": "21:52",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "They can state this is not applicable because the code is not present at runtime or because I have certain guidelines in place, certain guardrails.",
    "startTime": "21:53",
    "endTime": "22:01",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Sorry.",
    "startTime": "22:01",
    "endTime": "22:02",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "So they can make all these different assessments, provide you the Vex file and you as a consumer of the Vex file, can then turn the lights in your scanner off.",
    "startTime": "22:03",
    "endTime": "22:10",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Figuratively speaking.",
    "startTime": "22:11",
    "endTime": "22:12",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Yeah, go ahead.",
    "startTime": "22:14",
    "endTime": "22:15",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "Yeah.",
    "startTime": "22:15",
    "endTime": "22:15",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "DependencyTrack supports VEX files, so whenever DependencyCheck identifies a vulnerability, it creates a record in the database.",
    "startTime": "22:16",
    "endTime": "22:23",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "There is a table that you as a user can look at that provides all the information about the vulnerability.",
    "startTime": "22:23",
    "endTime": "22:27",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "And we provide you the option to upload a VEX file to apply analysis, which could then lead to a suppression of the.",
    "startTime": "22:28",
    "endTime": "22:34",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Of the finding.",
    "startTime": "22:34",
    "endTime": "22:35",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "So you can generate Excel from DependencyTrack and then you can federate out to however you see fit, which then, if you are shipping SBoMS to your customers, you would then in your SBoM point to that VEX file and say, here's an addendum essentially to the SBOM saying that yes, you will find this, but even if you do find this vulnerability when you scan this sbom, I ignore it because it's not impacted.",
    "startTime": "22:37",
    "endTime": "23:04",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "Right.",
    "startTime": "23:05",
    "endTime": "23:05",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "You could, but Dependency Check currently does not automatically fetch VEX files that are mentioned in the.",
    "startTime": "23:06",
    "endTime": "23:10",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "In the BOM that you upload.",
    "startTime": "23:10",
    "endTime": "23:11",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "So this is currently a missing piece of automation, I would say.",
    "startTime": "23:11",
    "endTime": "23:14",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Yeah.",
    "startTime": "23:14",
    "endTime": "23:15",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Okay.",
    "startTime": "23:15",
    "endTime": "23:15",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "Does DependencyTrack pull in any external references?",
    "startTime": "23:17",
    "endTime": "23:21",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "Because obviously that's a.",
    "startTime": "23:21",
    "endTime": "23:22",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "It doesn't.",
    "startTime": "23:22",
    "endTime": "23:23",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "Because that's a big concept in Cyclone.",
    "startTime": "23:23",
    "endTime": "23:26",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "Right.",
    "startTime": "23:26",
    "endTime": "23:26",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "Particular as you go in larger scale.",
    "startTime": "23:26",
    "endTime": "23:28",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "I know Cyclone takes a very different approach than SPDX when it comes to what's considered an SBOM cycle.",
    "startTime": "23:30",
    "endTime": "23:37",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "DX is heavily lenient on external references.",
    "startTime": "23:37",
    "endTime": "23:40",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "So is that something that's coming in five or what's the roadmap for allowing lookup for external references?",
    "startTime": "23:40",
    "endTime": "23:46",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "I wouldn't say this currently on the roadmap but it is definitely planned.",
    "startTime": "23:47",
    "endTime": "23:51",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "So we know we have a gap there.",
    "startTime": "23:51",
    "endTime": "23:52",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Especially if you talk about linking BOMs, right.",
    "startTime": "23:52",
    "endTime": "23:55",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "You can have a super bom, if you will, that then describes your entire system that links down to SBoMS of the services you deploy.",
    "startTime": "23:55",
    "endTime": "24:01",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "So, so we know this is a heavily asked for use case and we definitely want to implement that.",
    "startTime": "24:01",
    "endTime": "24:06",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "It is currently not on the roadmap per se, but yeah, we have plans.",
    "startTime": "24:06",
    "endTime": "24:12",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "I think a big part of complexity here is can you really trust the URLs that are being linked there in the SBoM?",
    "startTime": "24:12",
    "endTime": "24:19",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "So there's a lot of trust being.",
    "startTime": "24:19",
    "endTime": "24:21",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "You need to provide a SHA, right, as part of the SBOM or some kind of algorithm that says you can fetch this file, but here's the hash for that file that you can validate against.",
    "startTime": "24:22",
    "endTime": "24:31",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "Right?",
    "startTime": "24:31",
    "endTime": "24:32",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "Sure.",
    "startTime": "24:32",
    "endTime": "24:32",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "But even from the application security side of things, even if the SHA is valid, is even the like the artifact that is being described there, is that even trustworthy?",
    "startTime": "24:32",
    "endTime": "24:39",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Right.",
    "startTime": "24:39",
    "endTime": "24:40",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "I can give you an SBoM and the SHA might match, but the artifact being described by the SHA might still be malicious.",
    "startTime": "24:40",
    "endTime": "24:46",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Now we come back to trust, right?",
    "startTime": "24:46",
    "endTime": "24:48",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "Like ideally you need to have some, you need to do kind of some signing off the initial SBOMs and then you can trust.",
    "startTime": "24:48",
    "endTime": "24:56",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "Yeah, correct.",
    "startTime": "24:56",
    "endTime": "24:57",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Yes.",
    "startTime": "24:57",
    "endTime": "24:57",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "So if we, I mean I think if you're actually going to use SBOMs in the real world and actually rely it.",
    "startTime": "24:58",
    "endTime": "25:03",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "I think attestation is kind of table sticks and honestly with GitHub these days it's so easy to do attestation.",
    "startTime": "25:03",
    "endTime": "25:09",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "But yeah, that's.",
    "startTime": "25:11",
    "endTime": "25:12",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "Yeah, if you do attestation and then, yeah, then you can trust the SHA and then you can trust the link, right?",
    "startTime": "25:12",
    "endTime": "25:17",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "Correct.",
    "startTime": "25:17",
    "endTime": "25:17",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Assuming there's no collision.",
    "startTime": "25:18",
    "endTime": "25:19",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "But yes, generally speaking you can trust it.",
    "startTime": "25:19",
    "endTime": "25:21",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "Right?",
    "startTime": "25:21",
    "endTime": "25:21",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "Yeah, hopefully people are not using MD5 anymore.",
    "startTime": "25:21",
    "endTime": "25:23",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "All right, cool.",
    "startTime": "25:25",
    "endTime": "25:26",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "So we covered a bit of that.",
    "startTime": "25:26",
    "endTime": "25:27",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "What I'm really interesting is understanding more the roadmap in general.",
    "startTime": "25:29",
    "endTime": "25:34",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "So you mentioned five focus a lot on scalability.",
    "startTime": "25:34",
    "endTime": "25:38",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "What else can we see in the fiber release?",
    "startTime": "25:39",
    "endTime": "25:42",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "So what we've built is that kind of ties into the whole VEX conversation.",
    "startTime": "25:42",
    "endTime": "25:46",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "What we have noticed is if you as a secure team, or even as a team lead whatever, you have many projects to.",
    "startTime": "25:47",
    "endTime": "25:54",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Or many services to administer.",
    "startTime": "25:54",
    "endTime": "25:56",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Right.",
    "startTime": "25:56",
    "endTime": "25:57",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "You might see the same vulnerabilities pop up over and over again.",
    "startTime": "25:57",
    "endTime": "26:01",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Or you might just have false positives that will never be exploited by your services.",
    "startTime": "26:01",
    "endTime": "26:05",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "But.",
    "startTime": "26:05",
    "endTime": "26:05",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "But the scanners still find it, including DependencyTrack at some time.",
    "startTime": "26:05",
    "endTime": "26:09",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "And sometimes you cannot just like false positives are One thing, but also stuff not being exploitable.",
    "startTime": "26:10",
    "endTime": "26:17",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "And the problem with stuff not being exploitable is it is highly contextual.",
    "startTime": "26:17",
    "endTime": "26:20",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "You cannot at the system level, say always silence this specific vulnerability and call it a day.",
    "startTime": "26:21",
    "endTime": "26:28",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Because then you might suppress true positives.",
    "startTime": "26:28",
    "endTime": "26:30",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Right, True.",
    "startTime": "26:30",
    "endTime": "26:31",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "And this is where VEX kind of falls short.",
    "startTime": "26:31",
    "endTime": "26:34",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Either you have to generate VEX files for all your internal services and someone has to constantly check is this still applicable?",
    "startTime": "26:34",
    "endTime": "26:42",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Or you have one giant VEX file or one main VEX file that you upload to all your services to reduce the noise.",
    "startTime": "26:42",
    "endTime": "26:49",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Right.",
    "startTime": "26:49",
    "endTime": "26:49",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "What this means is it's kind of, it's contextual.",
    "startTime": "26:50",
    "endTime": "26:52",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "You need more information to make this decision.",
    "startTime": "26:52",
    "endTime": "26:55",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Can I suppress this?",
    "startTime": "26:55",
    "endTime": "26:57",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "So what we've built in version 5 is it kind of mixes into the policy engine stuff.",
    "startTime": "26:57",
    "endTime": "27:04",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "It is a way to attach a condition to essentially what is a VEX file.",
    "startTime": "27:04",
    "endTime": "27:08",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "So we will give you the option to provide a cell expression.",
    "startTime": "27:08",
    "endTime": "27:11",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "So cell is a common expression language.",
    "startTime": "27:11",
    "endTime": "27:14",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "It's from Google, I think it's used in Kubernetes as well for admission, webhooks, I think.",
    "startTime": "27:14",
    "endTime": "27:20",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Oh yeah.",
    "startTime": "27:20",
    "endTime": "27:21",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "So we allow you to use this expression language to attach a condition to your Vex statement and you can then say if this specific component is introduced through another component and it is only present in, or let's say it's present in a project tagged with a specific tag or that has specific property only, then apply the suppression so you get a lot more flexibility.",
    "startTime": "27:22",
    "endTime": "27:44",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "So like if you have a shared component across multiple projects, for instance, you can say, well, I ignore this because we know what it's being used as part of.",
    "startTime": "27:45",
    "endTime": "27:52",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "Yeah, correct.",
    "startTime": "27:52",
    "endTime": "27:53",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Just one example.",
    "startTime": "27:54",
    "endTime": "27:54",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Right.",
    "startTime": "27:54",
    "endTime": "27:55",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "But you can get very creative with the expressions that you create and we think this can alleviate a lot of pain points that people currently have with like suppressing stuff that just doesn't matter.",
    "startTime": "27:55",
    "endTime": "28:05",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "But scanners still bring up including DependencyTrack.",
    "startTime": "28:05",
    "endTime": "28:08",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Right.",
    "startTime": "28:09",
    "endTime": "28:09",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "So this is one thing we are also heavily interested or planning to evolve DependencyTrack for more use cases beyond just software and hardware.",
    "startTime": "28:09",
    "endTime": "28:19",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "There is this concept of a cryptography bill of materials that we really want to support.",
    "startTime": "28:19",
    "endTime": "28:23",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "So which cryptographic algorithms do you use potentially?",
    "startTime": "28:24",
    "endTime": "28:27",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Which certificates?",
    "startTime": "28:27",
    "endTime": "28:28",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "This is all risk.",
    "startTime": "28:28",
    "endTime": "28:30",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Right.",
    "startTime": "28:30",
    "endTime": "28:30",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "And we like to look, or we want to look at DependencyTrack as a supply chain risk management platform.",
    "startTime": "28:30",
    "endTime": "28:37",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Eventually it should not just be software and formats like SiteGroundX provide its information.",
    "startTime": "28:37",
    "endTime": "28:43",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "It would be nice to act on it.",
    "startTime": "28:44",
    "endTime": "28:45",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Right.",
    "startTime": "28:45",
    "endTime": "28:46",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "So this is on the longer term roadmap as well.",
    "startTime": "28:46",
    "endTime": "28:49",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "We are currently also heavily implementing user management improvements so if you are a large organization, you cannot just give everyone access to every single project and that is something where DependencyTrack version 4 currently falls a little bit short.",
    "startTime": "28:49",
    "endTime": "29:04",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "There's a limited amount of access control mechanisms that you can use to prevent people from looking at projects, modifying projects.",
    "startTime": "29:04",
    "endTime": "29:14",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "So this is something we are heavily currently working on and I hope we can demo something very soon.",
    "startTime": "29:15",
    "endTime": "29:21",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "On that note, we have a community meeting every single month, which you are welcome to join.",
    "startTime": "29:21",
    "endTime": "29:25",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Everyone watching this.",
    "startTime": "29:25",
    "endTime": "29:26",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Yeah, maybe if you're interested, join us there.",
    "startTime": "29:27",
    "endTime": "29:29",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Absolutely.",
    "startTime": "29:30",
    "endTime": "29:31",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "That's super cool.",
    "startTime": "29:31",
    "endTime": "29:32",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "Let's talk about use cases and what are the craziest and I mean actually let me rephrase that question.",
    "startTime": "29:32",
    "endTime": "29:41",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "Give us an order of magnitude of scale of how DependencyTrack being used both in terms of.",
    "startTime": "29:43",
    "endTime": "29:48",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "I know it's an open source project so you might not have exact data, but how popular is DependencyTrack and amongst those people who are using it, like what's the scale of this?",
    "startTime": "29:48",
    "endTime": "29:59",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "Like how large are the dependent track organizations or like use cases?",
    "startTime": "29:59",
    "endTime": "30:03",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "That is a very good question.",
    "startTime": "30:03",
    "endTime": "30:05",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "I would love to give you an accurate answer.",
    "startTime": "30:05",
    "endTime": "30:06",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "The problem is of course we are an open source project.",
    "startTime": "30:06",
    "endTime": "30:09",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Up until recently we didn't have any telemetry at all.",
    "startTime": "30:09",
    "endTime": "30:11",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Like we didn't know how many users actually use or deploy DependencyTrack.",
    "startTime": "30:11",
    "endTime": "30:15",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "But that being said, we, in the last major version, the last minor version, sorry we introduced just very basic telemetry that tells us which version you are using, right?",
    "startTime": "30:15",
    "endTime": "30:25",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "It's people can turn it off, they can see in the settings what is being sent, etc.",
    "startTime": "30:25",
    "endTime": "30:29",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "It's quite transparent.",
    "startTime": "30:29",
    "endTime": "30:30",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "And we released that version I think one or two months ago.",
    "startTime": "30:31",
    "endTime": "30:34",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Since then, I think this week is the first week where we had on two consecutive days 3000 instances reporting back to us on the latest like minor version, right.",
    "startTime": "30:34",
    "endTime": "30:46",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "And people are sometimes reluctant to update to newer versions.",
    "startTime": "30:46",
    "endTime": "30:49",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Subjectively I think those are quite good numbers like for adoption on its own.",
    "startTime": "30:50",
    "endTime": "30:55",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Of course we hope this will increase over time as we roll up new releases.",
    "startTime": "30:56",
    "endTime": "30:59",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Right.",
    "startTime": "30:59",
    "endTime": "30:59",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "And people really want to upgrade to that as per scale of individual instances.",
    "startTime": "30:59",
    "endTime": "31:05",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "I know like the majority of instances are probably mid sized, small to mid sized shops.",
    "startTime": "31:05",
    "endTime": "31:10",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "They might have hundreds to a few thousands of projects.",
    "startTime": "31:10",
    "endTime": "31:13",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "I am working for a, I can't call it customer, but a big user of DependencyTrack who's looking at over 100 thousands of projects who are like deployed in production that are constantly being scanned.",
    "startTime": "31:14",
    "endTime": "31:26",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Right.",
    "startTime": "31:26",
    "endTime": "31:26",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "And we are like this is one example.",
    "startTime": "31:27",
    "endTime": "31:31",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "But large companies do have lots of services that they run production.",
    "startTime": "31:31",
    "endTime": "31:35",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "We know a Few I can't name drop, of course, but we know larger companies are running DependencyTrack.",
    "startTime": "31:36",
    "endTime": "31:41",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "They do not disclose to us how many projects they run on DependencyTrack, but we can guesstimate it will be in the same ballpark as that one big user.",
    "startTime": "31:41",
    "endTime": "31:51",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "I know Monzo is a big shop of DependencyTrack, if I'm not wrong.",
    "startTime": "31:51",
    "endTime": "31:55",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "Right, yes, sorry, yeah, go ahead.",
    "startTime": "31:55",
    "endTime": "31:58",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "They also present at one of our community meetings about their experience with DependencyTrack.",
    "startTime": "31:59",
    "endTime": "32:03",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "They even mentioned like the cost of running it in their environment.",
    "startTime": "32:03",
    "endTime": "32:06",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Yep.",
    "startTime": "32:06",
    "endTime": "32:07",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Right.",
    "startTime": "32:08",
    "endTime": "32:08",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "And I think there are quite a few other banks.",
    "startTime": "32:08",
    "endTime": "32:10",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "I think JP is one of the customers or users of as well.",
    "startTime": "32:10",
    "endTime": "32:16",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "I believe I've heard.",
    "startTime": "32:16",
    "endTime": "32:18",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "Yeah, you can't, you may or may not know, I don't know.",
    "startTime": "32:18",
    "endTime": "32:21",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "But for those larger instances, like you say hundred thousand of components, what does it translate to?",
    "startTime": "32:22",
    "endTime": "32:30",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "Like, let's go back to like scalability.",
    "startTime": "32:30",
    "endTime": "32:33",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "What have you seen?",
    "startTime": "32:33",
    "endTime": "32:34",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "Because obviously the big ones will.",
    "startTime": "32:34",
    "endTime": "32:36",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "I mean this is how it tends to work even in open source.",
    "startTime": "32:36",
    "endTime": "32:39",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "Right.",
    "startTime": "32:39",
    "endTime": "32:39",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "Like if the real big guys, they will find their way to you if they want to have your support as they scale up.",
    "startTime": "32:39",
    "endTime": "32:45",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "Right.",
    "startTime": "32:45",
    "endTime": "32:45",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "So talk to me about some scalability scenarios where you've seen like what, I mean, 100,000 components.",
    "startTime": "32:45",
    "endTime": "32:52",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "Yeah, maybe it's only one S.1 per component, but like give me some data on like scalability problems you've encountered so far.",
    "startTime": "32:53",
    "endTime": "33:02",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "Okay, so first off, what I meant was not components but like projects.",
    "startTime": "33:02",
    "endTime": "33:06",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Right.",
    "startTime": "33:06",
    "endTime": "33:06",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "And every single project can have thousands of components.",
    "startTime": "33:06",
    "endTime": "33:09",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "So it is not unusual to end up with like millions of records in your components table, if you will.",
    "startTime": "33:09",
    "endTime": "33:14",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Right.",
    "startTime": "33:14",
    "endTime": "33:14",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "As per, like how people deal with it.",
    "startTime": "33:16",
    "endTime": "33:18",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "I think most people just end up like scaling the database until it doesn't work anymore.",
    "startTime": "33:18",
    "endTime": "33:22",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Right.",
    "startTime": "33:22",
    "endTime": "33:23",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "You can, you can crank up hardware pretty far if you want.",
    "startTime": "33:23",
    "endTime": "33:25",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "There have been some performance issues in the past that we addressed if people point them out to us.",
    "startTime": "33:26",
    "endTime": "33:31",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "But really my experience is that people tend to not reach out to us directly when they have performance issues.",
    "startTime": "33:32",
    "endTime": "33:38",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "What ends up happening is they think this is an open source project, we can just take the code, make adjustments to it as we need, as we please.",
    "startTime": "33:39",
    "endTime": "33:45",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "And this of course also includes the database schema.",
    "startTime": "33:45",
    "endTime": "33:48",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "If they end up finding something, a missing index or whatever, they just apply to their production database.",
    "startTime": "33:48",
    "endTime": "33:53",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "They may tell us about it, may contribute it back, but many simply don't.",
    "startTime": "33:53",
    "endTime": "33:59",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "That's my, that's my experience.",
    "startTime": "33:59",
    "endTime": "34:00",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "That's fair enough.",
    "startTime": "34:02",
    "endTime": "34:02",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "So the next thing I want to talk a bit about is, I mean a lot of it is still around SBOMs.",
    "startTime": "34:04",
    "endTime": "34:04",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "So the next thing I want to talk a bit about is, I mean a lot of it is still around SBOMs.",
    "startTime": "34:04",
    "endTime": "34:10",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "Right.",
    "startTime": "34:10",
    "endTime": "34:10",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "So I.",
    "startTime": "34:10",
    "endTime": "34:11",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "We have some pretty fast movements in the SBOMs world.",
    "startTime": "34:12",
    "endTime": "34:16",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "We have Cyclone DX2 coming out shortly.",
    "startTime": "34:16",
    "endTime": "34:19",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "I mean, obviously that must be something that you guys got your eyes on pretty carefully with Steve behind the roadmap.",
    "startTime": "34:19",
    "endTime": "34:27",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "So talk to me about that.",
    "startTime": "34:27",
    "endTime": "34:30",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "Talk to me about SPDX as well.",
    "startTime": "34:30",
    "endTime": "34:32",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "Are you aiming for feature parity?",
    "startTime": "34:33",
    "endTime": "34:35",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "What's the status today?",
    "startTime": "34:35",
    "endTime": "34:36",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "Talk to me about how you see the landscape of formats or the format war, if you will.",
    "startTime": "34:37",
    "endTime": "34:42",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "Yeah, format war, that's interesting.",
    "startTime": "34:44",
    "endTime": "34:45",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "So SPDX is currently not supported by DependencyTrack.",
    "startTime": "34:47",
    "endTime": "34:50",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "There is a history around that.",
    "startTime": "34:50",
    "endTime": "34:51",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "SPDX was at one point supported.",
    "startTime": "34:51",
    "endTime": "34:53",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "It was removed.",
    "startTime": "34:53",
    "endTime": "34:54",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "I will not go into that specifically because it's kind of political, but there is currently an open issue in DependencyTrack to add SPDX version 3 support back and really I don't think we should be.",
    "startTime": "34:54",
    "endTime": "35:06",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "We should be bound to a specific format.",
    "startTime": "35:06",
    "endTime": "35:09",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "I would like everything to be agnostic.",
    "startTime": "35:09",
    "endTime": "35:11",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "That's the whole purpose of ingesting data from the BOMs into our own format.",
    "startTime": "35:11",
    "endTime": "35:16",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Right.",
    "startTime": "35:16",
    "endTime": "35:16",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "So we don't have to rely on any specific format anymore.",
    "startTime": "35:16",
    "endTime": "35:20",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "So it is on the roadmap, if you will.",
    "startTime": "35:21",
    "endTime": "35:23",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "No one is actively working on it.",
    "startTime": "35:23",
    "endTime": "35:24",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "I think the SPDX folks themselves would be.",
    "startTime": "35:24",
    "endTime": "35:27",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Are interested in contributing that to DependencyTrack.",
    "startTime": "35:27",
    "endTime": "35:30",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "It might just be a matter of having a good conversation between the two of us and figuring out how.",
    "startTime": "35:31",
    "endTime": "35:35",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Yeah, I mean, I had Alan Friedman on the show last year and I think to paraphrase what he said, like, if we're still talking about formats in five years, we've lost the battle of S BOMs.",
    "startTime": "35:37",
    "endTime": "35:47",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "Yeah, right, for sure.",
    "startTime": "35:47",
    "endTime": "35:48",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "And I, I kind of agree with that.",
    "startTime": "35:48",
    "endTime": "35:49",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "Right.",
    "startTime": "35:49",
    "endTime": "35:50",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "Like it's just a way to express data slightly differently like that.",
    "startTime": "35:50",
    "endTime": "35:53",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "It should just be an implementation detail, hopefully soon enough.",
    "startTime": "35:53",
    "endTime": "35:57",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "Right.",
    "startTime": "35:57",
    "endTime": "35:57",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "But even on Cyclone you were pretty late to add support for Cyclone 1.6.",
    "startTime": "35:58",
    "endTime": "36:03",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "Even that took a while.",
    "startTime": "36:03",
    "endTime": "36:05",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "Walk to me like, what are the complexities?",
    "startTime": "36:06",
    "endTime": "36:07",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "Like what?",
    "startTime": "36:07",
    "endTime": "36:08",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "Because I mean, you would expect, given that it's a OS project tightly coupled with Cyclone, what are the internals of like keeping up with the development there?",
    "startTime": "36:08",
    "endTime": "36:18",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "You mean on the DependencyTrack side of things or.",
    "startTime": "36:18",
    "endTime": "36:20",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Yes, yes, yes.",
    "startTime": "36:20",
    "endTime": "36:21",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "Okay, so whenever a new major version of CycloneDX comes out, generators adopt it very quickly.",
    "startTime": "36:22",
    "endTime": "36:28",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "So it doesn't take long for people to upload the BOM DependencyTrack and then discover it's breaking.",
    "startTime": "36:28",
    "endTime": "36:28",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "I think CDX gen was probably the first one to generate it.",
    "startTime": "36:28",
    "endTime": "36:31",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "So it doesn't take long for people to upload the Bomb 3 Pensi track and then discover it's breaking.",
    "startTime": "36:31",
    "endTime": "36:36",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Yeah, that's what I did.",
    "startTime": "36:36",
    "endTime": "36:37",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "Yeah, it's kind of so there are multiple parts to it.",
    "startTime": "36:38",
    "endTime": "36:42",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "The main thing why uploads might be failing is because we do schema validation.",
    "startTime": "36:42",
    "endTime": "36:45",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Right?",
    "startTime": "36:45",
    "endTime": "36:46",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "We try to keep everything kind of enfor that it follows the spec.",
    "startTime": "36:46",
    "endTime": "36:49",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "And of course, if you do JSON schema validation, you need the schema to be present in order to validate against it.",
    "startTime": "36:50",
    "endTime": "36:56",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Yes.",
    "startTime": "36:56",
    "endTime": "36:57",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "And that schema is currently embedded into a CycloneDX library.",
    "startTime": "36:57",
    "endTime": "37:01",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "So before we can adopt new CycloneDX versions, the library needs to update.",
    "startTime": "37:01",
    "endTime": "37:06",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "It needs to update the embedded schema.",
    "startTime": "37:06",
    "endTime": "37:07",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Only then can schema validation succeed and we can accept new SBOM files or files in that format.",
    "startTime": "37:08",
    "endTime": "37:14",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "So that's the bottleneck.",
    "startTime": "37:15",
    "endTime": "37:16",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "That is one part of the story.",
    "startTime": "37:17",
    "endTime": "37:18",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "There might be some changes in the format itself that we need to adopt to.",
    "startTime": "37:19",
    "endTime": "37:22",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "So if there are new fields that users are interested in, we need to lay this out.",
    "startTime": "37:22",
    "endTime": "37:25",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "What do we need to support?",
    "startTime": "37:25",
    "endTime": "37:26",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Additionally, was some field renamed, did some format change of a field or did the type change?",
    "startTime": "37:26",
    "endTime": "37:32",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "All of this needs to be prepared.",
    "startTime": "37:33",
    "endTime": "37:34",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Obviously we cannot just allow people to upload documents and then present broken data.",
    "startTime": "37:34",
    "endTime": "37:40",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Yeah, of course, yeah.",
    "startTime": "37:41",
    "endTime": "37:42",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "But otherwise that's pretty straightforward.",
    "startTime": "37:42",
    "endTime": "37:44",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "I'm probably going to have Steve talk about Cyclone 2.0 on some future episode.",
    "startTime": "37:47",
    "endTime": "37:55",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "Do you want to give some kind of hints on where you see things are heading with Cyclone 2.0 or how that's going to fit into or make the life easier for the likes of the bandage strike?",
    "startTime": "37:55",
    "endTime": "38:05",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "I have to admit, I'm not too deep into the CycloneDX 2.0 work at the moment.",
    "startTime": "38:05",
    "endTime": "38:10",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "I know there's a very big aspect or a very big priority on discoverability this time.",
    "startTime": "38:10",
    "endTime": "38:16",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "I think Steve is very keen on making the data not really format bound, but more like, yeah, discoverable in a sense.",
    "startTime": "38:17",
    "endTime": "38:24",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "I would love DependencyTrack to really leverage that to maybe offload some of the stuff that DependencyTrack currently does to something that is more standardized, centralized.",
    "startTime": "38:25",
    "endTime": "38:35",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "That's coming from SiteGround DX.",
    "startTime": "38:36",
    "endTime": "38:37",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Yeah, right.",
    "startTime": "38:37",
    "endTime": "38:38",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "And for uploading SBOMs, is it purely JSON or do you support XML as well?",
    "startTime": "38:39",
    "endTime": "38:47",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "We also support XML.",
    "startTime": "38:47",
    "endTime": "38:48",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Yep.",
    "startTime": "38:48",
    "endTime": "38:49",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Okay.",
    "startTime": "38:49",
    "endTime": "38:49",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "Okay, good.",
    "startTime": "38:49",
    "endTime": "38:50",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "All right, so for people who wants to get involved with DependencyTrack, where can they kind of, where should they, who should they talk to, where should they get started, and so on.",
    "startTime": "38:51",
    "endTime": "39:01",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "So the first would obviously be dependencytrack.org, which is our main website.",
    "startTime": "39:01",
    "endTime": "39:05",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "The second would be the GitHub organization.",
    "startTime": "39:06",
    "endTime": "39:08",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "It's just called DependencyTrack.",
    "startTime": "39:08",
    "endTime": "39:10",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "On GitHub we have a community repository which includes the links to our previous community meetings.",
    "startTime": "39:10",
    "endTime": "39:17",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "There's a calendar invite if you want to join the community meetings in the future.",
    "startTime": "39:17",
    "endTime": "39:20",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "I guess there are lots of open issues in the DependencyTrack repository.",
    "startTime": "39:20",
    "endTime": "39:25",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "If you find something that you would like to work on, we have help wanted labels for all those issues.",
    "startTime": "39:25",
    "endTime": "39:30",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "You're more than welcome to contribute.",
    "startTime": "39:31",
    "endTime": "39:32",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Otherwise we have a Slack channel in the owasp.",
    "startTime": "39:34",
    "endTime": "39:36",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Slack.",
    "startTime": "39:36",
    "endTime": "39:36",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "It's hashtag dependency.",
    "startTime": "39:36",
    "endTime": "39:38",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "No project DependencyTrack.",
    "startTime": "39:38",
    "endTime": "39:41",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Yeah.",
    "startTime": "39:42",
    "endTime": "39:43",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "So we are very open to anyone who's interested in the project to come.",
    "startTime": "39:43",
    "endTime": "39:46",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "In and say hello and the stack you're working in Java and any other skills people should be like when you look for contributors.",
    "startTime": "39:46",
    "endTime": "39:54",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "Yeah.",
    "startTime": "39:55",
    "endTime": "39:55",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "So one very big aspect that we really need more help on is user experience.",
    "startTime": "39:55",
    "endTime": "39:59",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Front end work.",
    "startTime": "39:59",
    "endTime": "40:00",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "I have to admit I'm very much a backend guy.",
    "startTime": "40:01",
    "endTime": "40:03",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "I'm terrible at ui.",
    "startTime": "40:03",
    "endTime": "40:04",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Steve was a lot better than me on this aspect.",
    "startTime": "40:05",
    "endTime": "40:07",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Steve is very visionary when it comes to designing UX and I don't have that skill, to be honest.",
    "startTime": "40:07",
    "endTime": "40:13",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "So if Anyone looks at DependencyTrack thinks oh my God, what is this?",
    "startTime": "40:13",
    "endTime": "40:17",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "And knows how to improve the user experience, we would be very happy to have you.",
    "startTime": "40:18",
    "endTime": "40:22",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "But of course, if you know front end Vue JS JavaScript we have that stack as well for the backend work.",
    "startTime": "40:22",
    "endTime": "40:28",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "It's mostly Java as you mentioned.",
    "startTime": "40:28",
    "endTime": "40:30",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "It's Maven Docker.",
    "startTime": "40:30",
    "endTime": "40:32",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Yeah, that's pretty much it.",
    "startTime": "40:33",
    "endTime": "40:34",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Thankful for every contribution.",
    "startTime": "40:35",
    "endTime": "40:37",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Perfect.",
    "startTime": "40:37",
    "endTime": "40:38",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "Nicholas, this has been super helpful.",
    "startTime": "40:38",
    "endTime": "40:40",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "I think it has helped people navigate the pentacy track.",
    "startTime": "40:40",
    "endTime": "40:44",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "I think it gives a quick intro to it, help avoid common pitfalls, hopefully when they are starting to use DependencyTrack.",
    "startTime": "40:44",
    "endTime": "40:53",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "So again, thank you for coming on the show and really appreciate it.",
    "startTime": "40:53",
    "endTime": "40:57",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "Thank you so much.",
    "startTime": "40:57",
    "endTime": "40:57",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  },
  {
    "sentence": "Thank you for having me.",
    "startTime": "40:57",
    "endTime": "40:58",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "It was a big honor.",
    "startTime": "40:58",
    "endTime": "40:59",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Thank you.",
    "startTime": "40:59",
    "endTime": "40:59",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Thank you.",
    "startTime": "40:59",
    "endTime": "41:00",
    "speaker_name": "Niklas Düster",
    "speaker_id": 0
  },
  {
    "sentence": "Cheers.",
    "startTime": "41:00",
    "endTime": "41:01",
    "speaker_name": "Viktor Petersson",
    "speaker_id": 1
  }
]
