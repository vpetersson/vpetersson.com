[{"sentence":"Hello and welcome to this episode of Nerding out with Victor.","startTime":"00:00","endTime":"00:03","speaker_name":"Viktor Petersson","speaker_id":0},{"sentence":"Today.","startTime":"00:03","endTime":"00:03","speaker_name":"Viktor Petersson","speaker_id":0},{"sentence":"I got a very special guest with me today, Julius from Prometheus.","startTime":"00:03","endTime":"00:09","speaker_name":"Viktor Petersson","speaker_id":0},{"sentence":"Maybe we should start with doing a quick intro to yourself, Julius, for people who are not familiar with who you are and about what Prometheus is in big picture.","startTime":"00:09","endTime":"00:19","speaker_name":"Viktor Petersson","speaker_id":0},{"sentence":"Yeah.","startTime":"00:20","endTime":"00:20","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"So I'm Julius, I live in Berlin.","startTime":"00:20","endTime":"00:22","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"I am the co founder of the open source Prometheus monitoring system, but then also the founder and the sole person behind the company Promlabs.","startTime":"00:23","endTime":"00:33","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"So Prometheus is the open source, open governance monitoring system that is being developed and used by many people and there's many companies around it and Promlabs is just myself and it's just one of those companies.","startTime":"00:33","endTime":"00:46","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"Got it.","startTime":"00:48","endTime":"00:48","speaker_name":"Viktor Petersson","speaker_id":0},{"sentence":"Perfect.","startTime":"00:48","endTime":"00:49","speaker_name":"Viktor Petersson","speaker_id":0},{"sentence":"And I guess for those not familiar Prometheus.","startTime":"00:49","endTime":"00:53","speaker_name":"Viktor Petersson","speaker_id":0},{"sentence":"Do you want to give kind of a sense of how widely used Prometheus is today and how it's being used in general?","startTime":"00:53","endTime":"01:01","speaker_name":"Viktor Petersson","speaker_id":0},{"sentence":"Yeah, I mean Prometheus has pretty much become the de facto standard in metrics based systems monitoring in the open source world.","startTime":"01:01","endTime":"01:12","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"At least.","startTime":"01:12","endTime":"01:12","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"There's some closed and hosted competitors of course, but at least for the metrics based monitoring, it is pretty much the standard.","startTime":"01:13","endTime":"01:20","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"And yeah, I mean so you can find it really everywhere from small startups to really big banks, corporations, enterprises, even people run it at home to monitor their homes.","startTime":"01:20","endTime":"01:33","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"And yeah, you can use it in the classic data center use case to monitor your IT in a data center, but people also monitor hardware with it like sensors and chips and wind parks and all that kind of stuff.","startTime":"01:33","endTime":"01:48","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"It's super interesting.","startTime":"01:50","endTime":"01:51","speaker_name":"Viktor Petersson","speaker_id":0},{"sentence":"Let's take a stroll down memory lane because I'm really curious about the early days of Prometheus and really dive into that and if I'm not mistaken started around 2012 or so back at SoundCloud.","startTime":"01:52","endTime":"02:05","speaker_name":"Viktor Petersson","speaker_id":0},{"sentence":"Back in those days.","startTime":"02:05","endTime":"02:06","speaker_name":"Viktor Petersson","speaker_id":0},{"sentence":"Do you kind of speak a bit more about what happened and what led to the invention of Prometheus and what kind of pain point you can solve with for that?","startTime":"02:06","endTime":"02:16","speaker_name":"Viktor Petersson","speaker_id":0},{"sentence":"Yeah, exactly.","startTime":"02:16","endTime":"02:17","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"So this was 11 years ago, 2012.","startTime":"02:17","endTime":"02:20","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"So by now all of this is not as exciting maybe anymore, but back then it was.","startTime":"02:20","endTime":"02:26","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"So my job previous to SoundCloud was at Google as a site reliability engineer in one of the services.","startTime":"02:26","endTime":"02:33","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"And all the site reliability engineers at Google used a tool called Borgman to monitor their production services at Google, whether this was Google Search or Gmail or the service I was on, which was an internal backup service.","startTime":"02:34","endTime":"02:47","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"And this was a tool that was very similar to what Prometheus is now.","startTime":"02:48","endTime":"02:53","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"So the idea was to collect time series, store Them with a dimensional data model, so a metric name and then a set of labels attached to them so you can see in detail where something happened.","startTime":"02:53","endTime":"03:07","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"Which is great especially for dynamic cloud based systems which Google already had back then.","startTime":"03:07","endTime":"03:13","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"Now the thing is, after Google I went to SoundCloud and Matt Proud, another ex Googler, also went to SoundCloud at roughly the same time.","startTime":"03:13","endTime":"03:21","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"And were basically hired to try and make SoundCloud more stable and reliable and faster as platform or system engineers.","startTime":"03:21","endTime":"03:31","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"And we really found that the monitoring system world, especially in the open source world outside of Google, was severely lacking at that time.","startTime":"03:31","endTime":"03:40","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"Either the systems could only do alerting, but didn't really have any idea of history like time series, right?","startTime":"03:41","endTime":"03:48","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"Nagios didn't really have much of a data model to speak of or the alerting conditions you could create in there were very simplistic things and check scripts and so on.","startTime":"03:48","endTime":"03:59","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"And then you had systems like Graphite or opentsdb which either didn't have a dimensional data model and or didn't have a proper query language to do math between whole sets of numbers that are correlated in some ways and so on.","startTime":"04:00","endTime":"04:15","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"And then also efficiency of storage, UIs, all those things were kind of really lacking.","startTime":"04:16","endTime":"04:21","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"And so eventually we got to the point where we said, well, let's at least try in our free time, like on the weekends and after work at first to build something that is more similar to what were used to at Google.","startTime":"04:22","endTime":"04:34","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"And this became Prometheus.","startTime":"04:34","endTime":"04:37","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"We threw it up on GitHub under an Apache license from day zero, but we hadn't really told many people about it yet.","startTime":"04:37","endTime":"04:45","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"Then from there on, maybe two months in, we had the roughest of prototypes that could collect some data, store it and show it.","startTime":"04:46","endTime":"04:54","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"But then the first prototype is very easy and then comes the 99% of hard work.","startTime":"04:55","endTime":"05:03","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"So after that it was years of a convincing people that this makes sense to build our own monitoring system, then to actually build it until it was stable and scalable enough and wouldn't just oom all the time and all those things.","startTime":"05:03","endTime":"05:18","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"And then also to have at SoundCloud internally enough of a killer use case for it, which came and hadn't given that context which made Prometheus so important at SoundCloud specifically is that SoundCloud had very early on built a cluster scheduler like Kubernetes, much simpler of course, but before Docker, even before anyone else in the world was using containers, basically not everyone, but they built this using go version 0.9 something and like raw LXC containers and these hundreds of microservices running on that cluster would just be rescheduled on different hosts and different ports every time a new revision was rolled out.","startTime":"05:18","endTime":"06:04","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"And so that's what made it extra hard to monitor it.","startTime":"06:04","endTime":"06:07","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"With existing monitoring systems like Graphite for time series or Nagios for alerting when there was a latency spike, it was almost impossible to find out was it the entire service that is just getting slower or was there one specific instance contributing to this because we didn't have enough scalability to track per instance process level stats and very short lived time series and all that.","startTime":"06:07","endTime":"06:33","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"So yeah, the killer use case really started coming or I guess the first one of those was instrumenting this internal cluster scheduler system.","startTime":"06:33","endTime":"06:43","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"So every developer immediately now could see without doing anything, instance level stats of memory usage, CPU usage and so on.","startTime":"06:43","endTime":"06:52","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"Like all these per process, per container stats that are completely commonplace these days.","startTime":"06:52","endTime":"06:57","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"And they could key it by process, by revision by different labels that they cared about to track whether something was related to a revision or a specific host, et cetera.","startTime":"06:58","endTime":"07:10","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"Right, that was one thing that really helped it internally.","startTime":"07:10","endTime":"07:15","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"And then we needed a dashboard builder.","startTime":"07:15","endTime":"07:18","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"So I had built Prom Dash back then before Grafana was out.","startTime":"07:18","endTime":"07:22","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"So Grafana didn't really exist yet.","startTime":"07:22","endTime":"07:24","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"Prom Dash doesn't exist anymore.","startTime":"07:24","endTime":"07:26","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"So by now we're also all just using Grafana.","startTime":"07:26","endTime":"07:28","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"There's some new competitors on the horizon now.","startTime":"07:28","endTime":"07:31","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"And yeah, I mean at some point we reached an internal threshold of where people started, you know, adopting this more and more, finding it so useful that eventually there was an edict saying no new service without Prometheus Metrics.","startTime":"07:32","endTime":"07:47","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"And over the years we, yeah, we already kind of like told some other ex Googlers hey, we are writing a system similar to Borgmon.","startTime":"07:47","endTime":"07:59","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"Maybe you want to use it at your next company as well.","startTime":"07:59","endTime":"08:03","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"So we attracted like a handful of external users already.","startTime":"08:03","endTime":"08:06","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"But we only really fully published this in beginning of 2015 with a blog post from SoundCloud and another early user company.","startTime":"08:06","endTime":"08:16","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"And that's when things really exploded on Hacker News and everywhere else.","startTime":"08:16","endTime":"08:20","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"And you know, shortly later we joined the cncf and now the project is completely neutrally hosted in a foundation that belongs to the cncf.","startTime":"08:20","endTime":"08:30","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"So that's for people who don't know, that is the Cloud Native Computing foundation, which in turn belongs to the Linux Foundation.","startTime":"08:30","endTime":"08:38","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"And they were just setting that up originally just kind of Google with the lf.","startTime":"08:38","endTime":"08:42","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"They set it up to house Kubernetes neutrally.","startTime":"08:42","endTime":"08:45","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"And were the second project joining that and.","startTime":"08:45","endTime":"08:48","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"Yeah, so I guess that's the beginnings of it all.","startTime":"08:48","endTime":"08:51","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"And since then everything has grown a lot and evolved a lot.","startTime":"08:51","endTime":"08:55","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"Yeah, that's.","startTime":"08:56","endTime":"08:57","speaker_name":"Viktor Petersson","speaker_id":0},{"sentence":"I mean, I think there are.","startTime":"08:57","endTime":"08:58","speaker_name":"Viktor Petersson","speaker_id":0},{"sentence":"The interesting thing here is because it was such a important or the timing really played in the favor because I think it was just around that time where the whole ephemeral workload really started taking off and it sounded like obviously what you guys were doing predated kubernetes, which is kind of the default runtime these days.","startTime":"08:58","endTime":"09:15","speaker_name":"Viktor Petersson","speaker_id":0},{"sentence":"But back then, traditional monitoring tools, they were really not built for ephemeral workloads.","startTime":"09:15","endTime":"09:21","speaker_name":"Viktor Petersson","speaker_id":0},{"sentence":"Right.","startTime":"09:21","endTime":"09:21","speaker_name":"Viktor Petersson","speaker_id":0},{"sentence":"I think that's.","startTime":"09:21","endTime":"09:22","speaker_name":"Viktor Petersson","speaker_id":0},{"sentence":"That was.","startTime":"09:22","endTime":"09:22","speaker_name":"Viktor Petersson","speaker_id":0},{"sentence":"Yeah, it sounds like that was the big killer feature that really gained adoption.","startTime":"09:22","endTime":"09:27","speaker_name":"Viktor Petersson","speaker_id":0},{"sentence":"Right.","startTime":"09:27","endTime":"09:27","speaker_name":"Viktor Petersson","speaker_id":0},{"sentence":"Yeah, especially maybe not ephemeral in the sense of seconds because Prometheus is not the greatest at that.","startTime":"09:27","endTime":"09:33","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"Because at least you need some thing that can then keep the state of whatever just ran but great for short lived time series or ephemeral workloads in the sense of things that maybe just run a day and then they get rescheduled with a new revision or on a new, you know, process or something.","startTime":"09:33","endTime":"09:50","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"So not just tracking one fixed set of identified time series over time, but really, you know, having a lot of churn in the identities of your time series over the day as developers roll out new revisions and scale down or up apps and so on.","startTime":"09:51","endTime":"10:07","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"Yeah.","startTime":"10:07","endTime":"10:08","speaker_name":"Viktor Petersson","speaker_id":0},{"sentence":"So more ephemeral worker pools rather than ephemeral in the sense of like serverless, I guess.","startTime":"10:09","endTime":"10:15","speaker_name":"Viktor Petersson","speaker_id":0},{"sentence":"Yeah, yeah.","startTime":"10:15","endTime":"10:16","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"You can also make that work, but that you need some extra bits for that.","startTime":"10:16","endTime":"10:19","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"Yeah, yeah.","startTime":"10:19","endTime":"10:22","speaker_name":"Viktor Petersson","speaker_id":0},{"sentence":"So one thing I'm really curious about, obviously you have building and work with Prometheus now.","startTime":"10:22","endTime":"10:28","speaker_name":"Viktor Petersson","speaker_id":0},{"sentence":"Well, since day zero by definition.","startTime":"10:28","endTime":"10:30","speaker_name":"Viktor Petersson","speaker_id":0},{"sentence":"But what I'm really curious about is what is a common mistake you see in metrics?","startTime":"10:31","endTime":"10:35","speaker_name":"Viktor Petersson","speaker_id":0},{"sentence":"I'm sure you've done you.","startTime":"10:35","endTime":"10:37","speaker_name":"Viktor Petersson","speaker_id":0},{"sentence":"I've.","startTime":"10:37","endTime":"10:37","speaker_name":"Viktor Petersson","speaker_id":0},{"sentence":"I think I've said some blog posts you've been through about this and what?","startTime":"10:37","endTime":"10:41","speaker_name":"Viktor Petersson","speaker_id":0},{"sentence":"There's.","startTime":"10:41","endTime":"10:41","speaker_name":"Viktor Petersson","speaker_id":0},{"sentence":"There is some Prometheus consultancy out there that have written quite a few blog posts.","startTime":"10:42","endTime":"10:45","speaker_name":"Viktor Petersson","speaker_id":0},{"sentence":"But I'm curious about your vantage point of that.","startTime":"10:45","endTime":"10:47","speaker_name":"Viktor Petersson","speaker_id":0},{"sentence":"Like what really are the most common mistakes people do when they're implementing Prometheus?","startTime":"10:47","endTime":"10:54","speaker_name":"Viktor Petersson","speaker_id":0},{"sentence":"I guess in general.","startTime":"10:54","endTime":"10:56","speaker_name":"Viktor Petersson","speaker_id":0},{"sentence":"Yeah.","startTime":"10:57","endTime":"10:58","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"And one of the companies writing blog posts about exactly this is myself.","startTime":"10:58","endTime":"11:02","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"So that is Promlabs.","startTime":"11:02","endTime":"11:03","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"Also if you go to promlabs.com and you go to the blog section, there's an article called Avoid these six mistakes when getting started with Prometheus and the very clickbaity title leads you to blog post mentioned.","startTime":"11:03","endTime":"11:17","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"I read the post some time ago.","startTime":"11:17","endTime":"11:19","speaker_name":"Viktor Petersson","speaker_id":0},{"sentence":"Yeah, some of the common things that stump newbies and these are very common.","startTime":"11:19","endTime":"11:25","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"I think the really the most common one is cardinality bombs.","startTime":"11:25","endTime":"11:28","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"This is just when you discover this concept of dimensionality and labels for the first time, especially back then when it was new, people first were a little bit skeptical, what are these labels?","startTime":"11:28","endTime":"11:42","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"But then they said, oh, this is really useful.","startTime":"11:42","endTime":"11:45","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"Let's put everything into a label.","startTime":"11:45","endTime":"11:46","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"Like let's also split up all our time series by the exact user ID or an email or something of which there are an unbounded huge number of possible values.","startTime":"11:46","endTime":"11:58","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"And the main thing in Prometheus is that every set of labels generates one time series automatically.","startTime":"11:58","endTime":"12:09","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"The unique label set identifies a time series together with a metric name.","startTime":"12:09","endTime":"12:13","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"And so if you have one label in there that has a million different values, not only do you generate a million time series, but a million times whatever the other possible number of values are on the other labels on that same time series.","startTime":"12:13","endTime":"12:27","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"So it all multiplies together, the cardinality.","startTime":"12:27","endTime":"12:30","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"And your a big Prometheus server will maybe comfortably handle 10 or so million time series.","startTime":"12:30","endTime":"12:39","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"It really depends on how large you, how many resources you give it.","startTime":"12:39","endTime":"12:42","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"So several million time series are kind of normal for a big Prometheus server, maybe even more.","startTime":"12:42","endTime":"12:48","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"But that is your total budget.","startTime":"12:48","endTime":"12:50","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"And you want to kind of design your metrics in such a way that you stay under that total budget.","startTime":"12:50","endTime":"12:57","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"And how you exactly do that is kind of up to you.","startTime":"12:57","endTime":"12:59","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"Whether you have fewer processes to monitor because the process is also a label dimension, or whether you in the process split up a metric by fewer labels.","startTime":"12:59","endTime":"13:11","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"Or maybe there's ways to summarize the potential different values within one label into groups so you don't have to.","startTime":"13:11","endTime":"13:21","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"Instead of tracking a million different status codes, maybe you can group them into error success or something else.","startTime":"13:21","endTime":"13:27","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"Or something like this.","startTime":"13:27","endTime":"13:28","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"Right?","startTime":"13:28","endTime":"13:28","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"A very common thing where this happens is also when people want to track HTTP request statistics and they put an entire path in there, like hey, slash posts, user ID, post ID or whatever.","startTime":"13:29","endTime":"13:44","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"And these IDs, right?","startTime":"13:44","endTime":"13:45","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"They can get very high cardinality.","startTime":"13:45","endTime":"13:48","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"And there you could also say, hey, before I track this, I will actually replace these high cardinality bits in my path with something that is just a placeholder.","startTime":"13:48","endTime":"13:57","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"So now I'm just generating one label value for that particular pattern of labels.","startTime":"13:57","endTime":"14:05","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"So that's one.","startTime":"14:06","endTime":"14:07","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"I'm just looking here for others.","startTime":"14:08","endTime":"14:11","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"The others are even a little bit more technical, I guess, that are in my blog post.","startTime":"14:12","endTime":"14:16","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"So I Wouldn't go into them too deeply, but I think this whole metrics design is one of the biggest ones that everyone gets hit with initially.","startTime":"14:16","endTime":"14:27","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"Yeah, I can definitely relate to that.","startTime":"14:28","endTime":"14:29","speaker_name":"Viktor Petersson","speaker_id":0},{"sentence":"When we first started adopting Prometheus, we tagged and over tagged everything and it became, like you correctly pointed out, kind of unusable after a while.","startTime":"14:29","endTime":"14:40","speaker_name":"Viktor Petersson","speaker_id":0},{"sentence":"So less is more, I guess in some ways and start expanding from there.","startTime":"14:40","endTime":"14:45","speaker_name":"Viktor Petersson","speaker_id":0},{"sentence":"Speaking of metrics in general, so those are some common mistakes with Prometheus.","startTime":"14:45","endTime":"14:50","speaker_name":"Viktor Petersson","speaker_id":0},{"sentence":"If you're putting your sre hat back on for a moment, what do you consider kind of the blueprint or the best practice for server monitors in general?","startTime":"14:51","endTime":"15:03","speaker_name":"Viktor Petersson","speaker_id":0},{"sentence":"If you're looking away from the application stack but more metric that you care about when you do observability and how you do go about to do that and set up those dashboards.","startTime":"15:03","endTime":"15:14","speaker_name":"Viktor Petersson","speaker_id":0},{"sentence":"So how do you think about that?","startTime":"15:14","endTime":"15:15","speaker_name":"Viktor Petersson","speaker_id":0},{"sentence":"If you think from that angle, you.","startTime":"15:16","endTime":"15:18","speaker_name":"Viktor Petersson","speaker_id":0},{"sentence":"Mean like monitoring servers.","startTime":"15:18","endTime":"15:22","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"So assuming we are.","startTime":"15:22","endTime":"15:24","speaker_name":"Viktor Petersson","speaker_id":0},{"sentence":"Yes.","startTime":"15:24","endTime":"15:25","speaker_name":"Viktor Petersson","speaker_id":0},{"sentence":"Like the health of the server in general.","startTime":"15:25","endTime":"15:26","speaker_name":"Viktor Petersson","speaker_id":0},{"sentence":"Right.","startTime":"15:26","endTime":"15:27","speaker_name":"Viktor Petersson","speaker_id":0},{"sentence":"And so what are the metrics that you care about in terms of monitoring a server in general really?","startTime":"15:27","endTime":"15:34","speaker_name":"Viktor Petersson","speaker_id":0},{"sentence":"If you're thinking from like best practices for somebody who hasn't had proper monitoring in place, perhaps, and setting that up from day zero, presume that would involve node exporter.","startTime":"15:34","endTime":"15:46","speaker_name":"Viktor Petersson","speaker_id":0},{"sentence":"Perhaps.","startTime":"15:46","endTime":"15:47","speaker_name":"Viktor Petersson","speaker_id":0},{"sentence":"But I'm just curious, what do you think about that in general, how you see that Monitoring in general.","startTime":"15:47","endTime":"15:54","speaker_name":"Viktor Petersson","speaker_id":0},{"sentence":"Right.","startTime":"15:55","endTime":"15:55","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"So yeah, when it comes to like monitoring hosts.","startTime":"15:55","endTime":"15:58","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"Right, that's what you mean.","startTime":"15:58","endTime":"15:59","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"Yes.","startTime":"15:59","endTime":"16:00","speaker_name":"Viktor Petersson","speaker_id":0},{"sentence":"There's often not that much you actually want to alert on.","startTime":"16:01","endTime":"16:04","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"So it depends what your environment is, of course, and what your philosophy is.","startTime":"16:04","endTime":"16:09","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"But often for hosts at least there's.","startTime":"16:09","endTime":"16:13","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"The node exporters is one of those agents that the Prometheus project officially offers that exposes all kinds of metrics about the host it is running on to the Prometheus monitoring system.","startTime":"16:13","endTime":"16:25","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"So you can collect CPU memory usage and network usage and everything you would expect these days if you're running it on Linux, it gets it from the PROC file system, from the sys file system, like all these different kernel interfaces and then just bridges it over to Prometheus metrics.","startTime":"16:26","endTime":"16:42","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"And so the first step is just run the node exporter really easy.","startTime":"16:42","endTime":"16:46","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"It's easy to deploy on every host you have and then just monitor it so you have the metrics.","startTime":"16:46","endTime":"16:52","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"You can configure it in different ways to for example, exclude some pseudo file systems or Docker container volumes and stuff like that.","startTime":"16:52","endTime":"16:59","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"A lot of those exclusion flags are set pretty reasonably by default, so often you can just start it without Any flags and it'll work fine.","startTime":"16:59","endTime":"17:08","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"And yeah, then there's just like a few things you might want to alert on.","startTime":"17:09","endTime":"17:12","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"Like, you know, back then it was pretty common to alert on stuff like load average being high or certain resource usage being high.","startTime":"17:12","endTime":"17:22","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"But the problem is that sometimes that doesn't really point to a real problem and might actually generate too noisy alerts that don't immediately affect the service in a bad way.","startTime":"17:22","endTime":"17:34","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"And so alerting I would usually more approach from the kind of the SLA perspective of what does the user of whatever service you offer expect or what kind of agreement do you have with them or what service level objective SLO did you make for yourself?","startTime":"17:34","endTime":"17:53","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"At least this is the latency we want to have like 90th percentile latency should always below 100 milliseconds.","startTime":"17:54","endTime":"18:02","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"We should have a 99.9% uptime over given months and so on.","startTime":"18:04","endTime":"18:10","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"And then have alerts more based on these user visible metrics rather than on all possible underlying causal metrics.","startTime":"18:10","endTime":"18:18","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"You still want to collect all those underlying causal host metrics to be able to figure out when you do get alerted what might be the reason, what might be the underlying cause, are there any weird things in your graphs and so on.","startTime":"18:19","endTime":"18:31","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"But host wise there's not a lot of things you wouldn't alert directly on.","startTime":"18:31","endTime":"18:36","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"But of course there's some stuff like disk usage at least if it's completely full or you can predict that it is already very, it's maybe at 80% full and you're filling up quite fast and you can use a linear prediction in the Prometheus query language promql that it will be full in one day.","startTime":"18:36","endTime":"18:55","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"If it develops further like this, then it's still a good idea to alert on these imminent dangers to your actual service.","startTime":"18:55","endTime":"19:04","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"But other than that I would be very conservative with actual host level alerts.","startTime":"19:05","endTime":"19:09","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"And again it depends a lot on your environment of course, because also some environments will be completely happy if one host completely dies, whereas others will just, you know, completely have an issue if you don't have that redundancy.","startTime":"19:09","endTime":"19:26","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"Right.","startTime":"19:26","endTime":"19:27","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"Yeah, I mean I like the vantage point for SLO or SLA is of what is customer impacting really.","startTime":"19:27","endTime":"19:33","speaker_name":"Viktor Petersson","speaker_id":0},{"sentence":"I think that's a good, I think that's a good view of how what you should alert.","startTime":"19:33","endTime":"19:39","speaker_name":"Viktor Petersson","speaker_id":0},{"sentence":"I think that's a good guiding principle.","startTime":"19:39","endTime":"19:41","speaker_name":"Viktor Petersson","speaker_id":0},{"sentence":"You kind of alluded to alerting, but do you want to speak a bit about Alert Manager as well?","startTime":"19:42","endTime":"19:46","speaker_name":"Viktor Petersson","speaker_id":0},{"sentence":"Because that's obviously an important corner piece in Prometheus at large.","startTime":"19:46","endTime":"19:50","speaker_name":"Viktor Petersson","speaker_id":0},{"sentence":"Yeah, so the idea how Prometheus alerting works in general is that first Prometheus collects all these dimensional metrics, and then anything useful you want to do with the collected data, you probably will use the Prometheus query language, PromQL.","startTime":"19:51","endTime":"20:07","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"So this is like a dimensional, very useful functional query language for processing your time series data and generating some answers based on the selected data, whether you want to aggregate or select or do mathematical correlations, and so on.","startTime":"20:07","endTime":"20:23","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"And you can use this query language both for dashboarding, ad hoc debugging, and automation, but also for alerting.","startTime":"20:23","endTime":"20:33","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"So alerting uses the same PromQL query language.","startTime":"20:33","endTime":"20:36","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"So this is not the alert manager yet that still happens in Prometheus.","startTime":"20:36","endTime":"20:40","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"The alerting rules are actually configured as part of the Prometheus server, and the Prometheus server on a regular basis runs the contained PromQL expression in an alerting rule.","startTime":"20:40","endTime":"20:53","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"And if there is any output, any time series being returned from this PromQL expression in the rule, those outputs will become alerts, subject to some other thresholds that are configured in the rule, and so on.","startTime":"20:53","endTime":"21:07","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"And then once they do become alerts, they get sent to this separate server component that is called the Alert Manager.","startTime":"21:07","endTime":"21:13","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"And so the alert manager just receives fully baked, hey, here's a problem style alerts from various Prometheus servers in your infrastructure, and then it routes them based on their labels to some.","startTime":"21:13","endTime":"21:29","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"So basically the alert manager conflict is like a big routing tree, and you end up in some node of that routing tree based on what labels your alert had.","startTime":"21:29","endTime":"21:38","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"And you might root on stuff like the team or the service or the severity level of the alert, right?","startTime":"21:38","endTime":"21:44","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"And then in that routing node that you actually reach, you can configure all kinds of things like do I want to send this to slack or to PagerDuty, for example, to which teams Slack, and so on.","startTime":"21:44","endTime":"21:59","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"You can say, hey, throttle this in a certain way over time, group this by certain labels.","startTime":"21:59","endTime":"22:10","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"So, for example, hey, don't send me one alert for every host that is down, but send me one alert that contains all the hosts that are down.","startTime":"22:10","endTime":"22:19","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"So you can kind of bake many notifications into one with more detail so you don't get flooded.","startTime":"22:19","endTime":"22:25","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"And yeah, there's a bunch more settings that are possible in the alert manager, but basically this the component where all your Prometheus servers send their raw alerts to, and then it routes and throttles and aggregates and finally dispatches your final alert notifications to a human.","startTime":"22:26","endTime":"22:44","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"Okay, that's perfect.","startTime":"22:44","endTime":"22:45","speaker_name":"Viktor Petersson","speaker_id":0},{"sentence":"One thing that I think people that start using Prometheus eventually run into is long term storage because obviously Prometheus is not designed for long term storage, it's designed for short term storage where I think Its default is 14 days I believe it is, if not mistaken and then you can set it to higher.","startTime":"22:46","endTime":"23:06","speaker_name":"Viktor Petersson","speaker_id":0},{"sentence":"But I think it would probably peak out about a month or so on most hosts before it becomes useless.","startTime":"23:06","endTime":"23:13","speaker_name":"Viktor Petersson","speaker_id":0},{"sentence":"Kind of what I mean, what's your view on that?","startTime":"23:13","endTime":"23:17","speaker_name":"Viktor Petersson","speaker_id":0},{"sentence":"There have been quite a lot of development with Cortex is one of them and quite a few others.","startTime":"23:17","endTime":"23:22","speaker_name":"Viktor Petersson","speaker_id":0},{"sentence":"How do you see that evolving and what are you thinking around that?","startTime":"23:22","endTime":"23:27","speaker_name":"Viktor Petersson","speaker_id":0},{"sentence":"How do you recommend people looking?","startTime":"23:27","endTime":"23:29","speaker_name":"Viktor Petersson","speaker_id":0},{"sentence":"Good point.","startTime":"23:29","endTime":"23:30","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"So Prometheus comes with its own built in TSTB time series database storing files on local disk.","startTime":"23:30","endTime":"23:38","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"And I would have to say for many use cases that are not huge, this actually works pretty well even as a long term storage.","startTime":"23:39","endTime":"23:45","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"So there are people like me who have years of data in a single Prometheus database.","startTime":"23:45","endTime":"23:51","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"But of course if you do collect a lot of data about millions of different time series every couple of seconds, eventually you will hit the scalability bottleneck of one disk and this local TSDB implementation.","startTime":"23:51","endTime":"24:06","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"And you may also hit depending on your requirements, robustness or reliability issues, when that one disk dies or you lose the data or something, there's ways to back it up so you can still make it work.","startTime":"24:06","endTime":"24:19","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"So first of all I wanted to say actually you can use the normal Prometheus TSDB quite well for certain long term storage scenarios, but eventually of course you will outgr what a single node can do.","startTime":"24:19","endTime":"24:33","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"And there's different ways for going around that.","startTime":"24:33","endTime":"24:37","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"So one is, hey, let's configure the Prometheus server to send all the data or subset off that it collects to some remote storage system.","startTime":"24:37","endTime":"24:48","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"So it doesn't only store it locally, but forwards it to some remote endpoint.","startTime":"24:48","endTime":"24:54","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"You can even now if you want to, you could even turn off the local storage completely so it only forwards.","startTime":"24:54","endTime":"24:59","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"And then that remote endpoint needs to implement a protocol that we call remote write.","startTime":"24:59","endTime":"25:05","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"This is a protocol that the Prometheus monitoring system standardized.","startTime":"25:05","endTime":"25:10","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"And by now there are so many different integrations for that protocol.","startTime":"25:11","endTime":"25:16","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"Like all the major cloud providers accepted.","startTime":"25:16","endTime":"25:20","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"If you go to like, you know, Amazon, Google and all these, you can usually send Prometheus remote right there or also Chronosphere, Grafana cloud, all these players and they have their own proprietary databases for how they can then scale and store that data in different ways and give you extra features on top and give you a global view over all the data from Your different Prometheus servers.","startTime":"25:20","endTime":"25:44","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"So this is one option and there are also open source alternatives to this one is Cortex.","startTime":"25:45","endTime":"25:52","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"And yeah, this also came from a long overlap with Prometheus maintainers.","startTime":"25:53","endTime":"26:00","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"I was one of the original Cortex creators as well, along with Tom Wilkie.","startTime":"26:00","endTime":"26:04","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"And this is more of a clustered system that you can run locally, but it is quite complex.","startTime":"26:05","endTime":"26:10","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"So it's like mainly for people who want to offer Prometheus data storage as a service in their big organization, as a central point where all the different teams can send their Prometheus data and then it will offer you a PromQL compatible API that you can use with Grafana and other tools, even Alert Manager and so on.","startTime":"26:10","endTime":"26:31","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"So that is really a horizontally scalable multi tenant tool.","startTime":"26:32","endTime":"26:37","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"It is a bit more complex to deploy.","startTime":"26:37","endTime":"26:40","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"So most people who do want to have some kind of long term storage on premise tend to use a thing that works a little bit differently called Thanos.","startTime":"26:40","endTime":"26:49","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"And Thanos works in this way, at least the way it was originally envisioned.","startTime":"26:50","endTime":"26:56","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"Now it supports different modes as well.","startTime":"26:56","endTime":"26:58","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"Is you run still all your different Prometheus servers in your infrastructure, monitoring different services and regions and data centers and so on.","startTime":"26:58","endTime":"27:08","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"But now you want to add both a global view over them and long term storage and then also some ha deuplication and so on.","startTime":"27:09","endTime":"27:18","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"This is what Thanos can do.","startTime":"27:18","endTime":"27:20","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"So you still have your Prometheus servers, but now you run little sidecars next to each of them and they all integrate together with the Thanos Querier into this kind of mesh where you can in a federated way query over all of them at once, give them a single PromQL query and the query knows which Prometheus servers it actually needs to hit based on some labels in your query.","startTime":"27:20","endTime":"27:43","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"So it doesn't need to always go to all of them.","startTime":"27:43","endTime":"27:46","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"And these sidecars running next to each Prometheus server can also ship all the finished TSDB blocks.","startTime":"27:46","endTime":"27:55","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"So everything that is a bit older than like 2 or 3 hours to an object storage like either S3 or minio or GCS and others.","startTime":"27:55","endTime":"28:04","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"And then the Querier, the Thanos Querier can integrate that long term older data as well.","startTime":"28:05","endTime":"28:12","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"And so there it's really safely backed up right in any of those object storages, you can easily replicate it and all that.","startTime":"28:12","endTime":"28:19","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"So yeah, you get like pretty cheap very long term storage, including some down sampling features and so on.","startTime":"28:20","endTime":"28:28","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"So most people who want to scale Prometheus internally, they just use Thanos.","startTime":"28:28","endTime":"28:33","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"And then others who really want to invest in a dedicated team running such a cluster for other teams would use Cortex.","startTime":"28:33","endTime":"28:41","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"There's also Mimir, which is a Grafana fork of Cortex now.","startTime":"28:41","endTime":"28:45","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"And then others again, they would choose some cloud services to do that.","startTime":"28:45","endTime":"28:50","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"Yeah, no, we've been using tunnels at screen enough for a while and we use it both for metrics on our clusters infrastructure, but also on actual devices.","startTime":"28:51","endTime":"29:01","speaker_name":"Viktor Petersson","speaker_id":0},{"sentence":"So pushing metrics from actual devices.","startTime":"29:01","endTime":"29:03","speaker_name":"Viktor Petersson","speaker_id":0},{"sentence":"But one of the things I find great and this kind of beautiful simplicity of Prometheus is really the output.","startTime":"29:03","endTime":"29:12","speaker_name":"Viktor Petersson","speaker_id":0},{"sentence":"Because if you look at how a slash metrics feed looks like, it is so simple and kind of that's what's beautiful about it in many ways.","startTime":"29:12","endTime":"29:21","speaker_name":"Viktor Petersson","speaker_id":0},{"sentence":"Because writing a Prometheus exporter is very trivial.","startTime":"29:21","endTime":"29:26","speaker_name":"Viktor Petersson","speaker_id":0},{"sentence":"I mean, you can literally write one in Bash versus many other monitoring frameworks that I worked with in the past.","startTime":"29:26","endTime":"29:32","speaker_name":"Viktor Petersson","speaker_id":0},{"sentence":"And I guess that combined with the modularity of the remote write, which is kind of recursive almost because you use the same way to push to it as you can do to push further out in the federation.","startTime":"29:32","endTime":"29:46","speaker_name":"Viktor Petersson","speaker_id":0},{"sentence":"I find that as a beautiful implementation.","startTime":"29:46","endTime":"29:49","speaker_name":"Viktor Petersson","speaker_id":0},{"sentence":"So so far, what is the most interesting use case you've seen of Prometheus or out of the box use case of Prometheus?","startTime":"29:51","endTime":"29:59","speaker_name":"Viktor Petersson","speaker_id":0},{"sentence":"You spoke a bit about monitoring your home, but I'm curious, like what's the most crazy use case you've seen so far?","startTime":"29:59","endTime":"30:06","speaker_name":"Viktor Petersson","speaker_id":0},{"sentence":"Yeah, the ones that I always find the coolest or most interesting is when I hear someone talk somewhere or tell me about physical use cases like we had.","startTime":"30:07","endTime":"30:17","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"So maybe I'll just mention like three or four different examples.","startTime":"30:17","endTime":"30:21","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"One was a prom con.","startTime":"30:21","endTime":"30:23","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"So we also have a Prometheus conference, a promcon.","startTime":"30:23","endTime":"30:26","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"Talk about someone monitoring a big wind power park with Prometheus.","startTime":"30:26","endTime":"30:31","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"So he could even have the rotational angle of all the different, what do you call them, windmills or whatever they are.","startTime":"30:31","endTime":"30:38","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"Yeah, as a metric.","startTime":"30:39","endTime":"30:40","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"So like the angle as a metric, the wattage as a metric and everything.","startTime":"30:41","endTime":"30:46","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"So that was cool.","startTime":"30:46","endTime":"30:47","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"I heard from a big container shipping company who shall remain unnamed, that they have Prometheus running on all of their vessels and reports home telemetry about the ship, about where it is and what it's doing.","startTime":"30:47","endTime":"31:02","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"That I found really cool.","startTime":"31:02","endTime":"31:04","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"One guy from Accenture once gave a meetup talk about the train system in Germany, the Deutsche Bahn, where you have all these displays, signage systems telling you when the next train is coming and which one it is.","startTime":"31:06","endTime":"31:19","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"There were almost 100,000 or so of those in Germany in the different train platforms.","startTime":"31:20","endTime":"31:25","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"And they had basically installed the node exporter or something akin to it in each of these.","startTime":"31:26","endTime":"31:31","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"And we're monitoring it remotely using Prometheus.","startTime":"31:31","endTime":"31:34","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"So that's kind of cool because then you're on a train platform somewhere and you're like, oh cool.","startTime":"31:35","endTime":"31:39","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"That's like where basically my software is running in and you can show that.","startTime":"31:39","endTime":"31:44","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"So I really like those because, you know, all the data center use cases, they're cool.","startTime":"31:44","endTime":"31:49","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"Of course that's what Prometheus was made for.","startTime":"31:49","endTime":"31:51","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"But they're kind of the usual thing.","startTime":"31:52","endTime":"31:55","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"Maybe one tiny use case that someone also reported is they had mold in their bathroom at home and now basically they wanted to monitor the conditions to not get mold again.","startTime":"31:55","endTime":"32:09","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"So they just installed Prometheus on like a little Raspberry PI or something at home and monitor temperature, humidity and air pressure, I think.","startTime":"32:09","endTime":"32:18","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"And then you can like calculate in promql whether the dew point is reached and then send an alert in case that happens.","startTime":"32:18","endTime":"32:24","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"And then you would open the windows or something.","startTime":"32:24","endTime":"32:26","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"Right.","startTime":"32:26","endTime":"32:27","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"And so it really scales down to those really tiny use cases as well.","startTime":"32:27","endTime":"32:33","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"That's really cool.","startTime":"32:34","endTime":"32:35","speaker_name":"Viktor Petersson","speaker_id":0},{"sentence":"So we covered quite a lot about PromQL, but maybe it warrants a bit of a deeper intro to what PromQL is as it's such an important building block in Prometheus.","startTime":"32:36","endTime":"32:47","speaker_name":"Viktor Petersson","speaker_id":0},{"sentence":"And I'm not sure you want to do some speaking about the background of it and like the history of it.","startTime":"32:47","endTime":"32:55","speaker_name":"Viktor Petersson","speaker_id":0},{"sentence":"My understanding is it really derived from kind of reverse engineer something that Google had in sense.","startTime":"32:55","endTime":"33:00","speaker_name":"Viktor Petersson","speaker_id":0},{"sentence":"But maybe you want to speak a bit about like the design implementation and perhaps do a quick demo of how it works if that's.","startTime":"33:00","endTime":"33:08","speaker_name":"Viktor Petersson","speaker_id":0},{"sentence":"Yeah, could do that.","startTime":"33:08","endTime":"33:09","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"So prompt.","startTime":"33:09","endTime":"33:10","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"Yeah, it's the one unifying query language in the Prometheus ecosystem that you know, allows you to do dashboarding, alerting, debugging, other use cases as well.","startTime":"33:10","endTime":"33:20","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"Automation for example.","startTime":"33:20","endTime":"33:22","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"And it is a non SQL style query language where you really just write a functional expression that some function that might take other parameters that are in turn.","startTime":"33:23","endTime":"33:36","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"Again an expression that could take other parameters.","startTime":"33:36","endTime":"33:38","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"So it could form like an arbitrarily deep tree.","startTime":"33:38","endTime":"33:41","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"But eventually if you evaluate that tree, you'll get some kind of result so you can select some data.","startTime":"33:41","endTime":"33:47","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"Then you might.","startTime":"33:48","endTime":"33:48","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"If it's counters, then you could take the rate of increase around it and then maybe you would want to sum up all the individual rates but keep certain dimensions in the sum.","startTime":"33:48","endTime":"33:59","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"So we still group by the path but get rid of all the other.","startTime":"33:59","endTime":"34:02","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"The instance level detail.","startTime":"34:02","endTime":"34:04","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"For example, you might have a whole set of error rates divided by a whole other set of error rates by a whole set of total rates correlated on identical label Sets so you can get a whole list of error rate ratios out and then alert on that.","startTime":"34:04","endTime":"34:22","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"You can filter.","startTime":"34:22","endTime":"34:23","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"You have a bunch of different functions basically to compute different things.","startTime":"34:24","endTime":"34:28","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"Very geared around systems monitoring.","startTime":"34:28","endTime":"34:31","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"So not like deep machine learning statistics or so, but really quick functions that behave pretty simply to give you right now answers about your infrastructure and whether you should alert someone, for example.","startTime":"34:31","endTime":"34:44","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"And yeah, I mean, if you like, I could try sharing my screen and just showing you what the language looks like.","startTime":"34:45","endTime":"34:51","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"Let's do it.","startTime":"34:53","endTime":"34:54","speaker_name":"Viktor Petersson","speaker_id":0},{"sentence":"Let's try that.","startTime":"34:54","endTime":"34:55","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"Okay, so I have this.","startTime":"34:55","endTime":"34:58","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"Let's see.","startTime":"34:59","endTime":"35:00","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"I have.","startTime":"35:00","endTime":"35:01","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"Should I share?","startTime":"35:02","endTime":"35:03","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"Yeah, I'll share the entire screen here.","startTime":"35:03","endTime":"35:06","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"Of course it only shows me.","startTime":"35:06","endTime":"35:08","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"Okay, I will do the entire screen because otherwise it does not show me the windows that I have on a different virtual desktop.","startTime":"35:08","endTime":"35:15","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"So let me know once you can see stuff.","startTime":"35:15","endTime":"35:21","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"I can see it.","startTime":"35:23","endTime":"35:23","speaker_name":"Viktor Petersson","speaker_id":0},{"sentence":"I'll just maybe zoom in a little bit more even here.","startTime":"35:23","endTime":"35:27","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"So this is Promlens is one of the possible interfaces for dealing with PromQL.","startTime":"35:27","endTime":"35:33","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"Basically what you have here is you have an expression input box and you can, you know, first of all you can select some data, of course.","startTime":"35:33","endTime":"35:41","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"Now, okay, let me reload that.","startTime":"35:41","endTime":"35:44","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"So for example, some HTTP level counter metrics counting for three different demo service instances, which process they come from, which group of processes.","startTime":"35:49","endTime":"36:01","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"This is the job.","startTime":"36:01","endTime":"36:02","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"The method for which an HTTP request was handled, the path on which it happened, the status code that was the result of the request.","startTime":"36:03","endTime":"36:12","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"So more for the response status code, I guess.","startTime":"36:12","endTime":"36:15","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"And these are raw counter values.","startTime":"36:15","endTime":"36:18","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"So if you just graph them like this, they don't look too useful because these only go up basically starting from whenever this demo service was started.","startTime":"36:18","endTime":"36:28","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"So they start at zero and then they just go up.","startTime":"36:28","endTime":"36:31","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"So what you want to know is you want to see like how fast do they go up.","startTime":"36:31","endTime":"36:35","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"And I could add a rate function around this here.","startTime":"36:35","endTime":"36:38","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"Not going too much in detail now about how this works in detail.","startTime":"36:38","endTime":"36:42","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"But then you will see at every point in the graph averaged over a 5 minutes window.","startTime":"36:43","endTime":"36:48","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"What's the actual per second request rate for the different dimensional combinations Here you can see if I hover over this.","startTime":"36:49","endTime":"36:57","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"This is method get path API bar status 200 and you get that for the different other ones as well.","startTime":"36:57","endTime":"37:03","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"If we wanted to now we could sum this and only keep the path dimension.","startTime":"37:04","endTime":"37:09","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"For example now we would have it only for every path instead of all the full details.","startTime":"37:09","endTime":"37:14","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"This is the summed up rates, aggregated rates.","startTime":"37:14","endTime":"37:18","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"I could still break out the method if I wanted to.","startTime":"37:18","endTime":"37:21","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"And since I'm using PROM lens, it's showing me my textual query as a kind of laid out tree here as well, where I can see how many results I have in each of the sub nodes of my query.","startTime":"37:23","endTime":"37:35","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"Right?","startTime":"37:35","endTime":"37:35","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"This is like a full, could be a first class expression by itself.","startTime":"37:35","endTime":"37:40","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"This demo API request duration, seconds count, metric name and then this one, the rate call also produces 27 results.","startTime":"37:41","endTime":"37:49","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"But those 27 results get shrunken down by the aggregation to only 5 results because we only have 5 path and method combinations that we end up with here, down here.","startTime":"37:50","endTime":"38:02","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"Now one further thing we could do is we could say, hey, let's only select the ones that ended with a 500 so errors, right?","startTime":"38:02","endTime":"38:13","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"This would be like error rates by path and method combination.","startTime":"38:13","endTime":"38:18","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"And now we could correlate those error rates for each path and method, which we can also see here as a table as current values.","startTime":"38:19","endTime":"38:29","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"We could correlate those to the total rates we get for the same dimensional combinations of method and path.","startTime":"38:29","endTime":"38:36","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"So now I could say, hey, divide this entire thing by basically the same thing, except here I'm, you know, in below the division, I'm not going to select only the arrows, I'm going to select all the requests to arrive at a total sum.","startTime":"38:36","endTime":"38:53","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"And I can indent this a little bit better here.","startTime":"38:53","endTime":"38:56","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"And yeah, now what happens is that this binary operator automatically does a join on identical label sets between the first and second operand.","startTime":"38:56","endTime":"39:04","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"We can also show that here how the matching is happening.","startTime":"39:05","endTime":"39:08","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"We see that sum will not actually find label combinations that have 500 errors.","startTime":"39:08","endTime":"39:15","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"So those will not produce an output.","startTime":"39:15","endTime":"39:18","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"And yeah, by default that's what happens.","startTime":"39:19","endTime":"39:21","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"You can customize these binary operations to match on a subset of labels to allow many to one or one to many.","startTime":"39:21","endTime":"39:27","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"Matching won't do that now.","startTime":"39:27","endTime":"39:30","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"So what we're getting now is basically ratios of how many errors there are.","startTime":"39:30","endTime":"39:35","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"I could multiply those by 100 to get percentages.","startTime":"39:35","endTime":"39:39","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"So we have 0.3% of errors in this first combination, for example, 0.7 in the second.","startTime":"39:40","endTime":"39:48","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"And now I could extend this to some kind of alerting rule where I say, hey, give me all the ones that are larger than 0.5%.","startTime":"39:48","endTime":"39:57","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"And so I just filtered this entire list of output time series down to the ones that have a sample value of larger than 0.5%.","startTime":"39:57","endTime":"40:05","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"And now I would get exactly the problematic label combination.","startTime":"40:06","endTime":"40:10","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"This is just one example of what you can do with PromQL.","startTime":"40:11","endTime":"40:13","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"There's histogram stuff in there's other stuff, but it's really just working with this label based data model and yeah, if you want to learn more about PromQL and all the different constructs you can write, I also created a cheat sheet@promlabs.com promql cheat sheet.","startTime":"40:13","endTime":"40:32","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"You can find it also here under the resources.","startTime":"40:32","endTime":"40:35","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"And here I try to just list all the major patterns that people usually Write when doing PromQL.","startTime":"40:36","endTime":"40:43","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"So this won't be everything, but you can open each of these patterns in PROM Lens by just clicking on a button here and then you have some demo data to actually work with and play with expression and change it and see what it does.","startTime":"40:44","endTime":"40:56","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"You can also let the different nodes get explained to you here what they actually do.","startTime":"40:56","endTime":"41:04","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"You get the explanation down here.","startTime":"41:04","endTime":"41:06","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"So yeah, that's just like a super duper brief intro to what PromQL looks like.","startTime":"41:07","endTime":"41:13","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"And yeah, importantly and I'll stop sharing here, it's only used for reading data.","startTime":"41:13","endTime":"41:20","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"So if you want to write data into Prometheus or delete some data that happens over totally different paths.","startTime":"41:20","endTime":"41:26","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"Like Prometheus writing into the TSDB after his it has collected some data or if data has become too old it will become deleted depending on your retention policies.","startTime":"41:26","endTime":"41:37","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"But PromQL itself only always gives you some results.","startTime":"41:37","endTime":"41:42","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"It's a read only language and really flexible at giving you precise answers and conditions.","startTime":"41:42","endTime":"41:49","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"So one thing, I mean just very simple and question I guess around promql I guess maybe you can just explain it quickly like when you look at demo examples of Prometheus particular in the Stack Overflow forums and so on.","startTime":"41:50","endTime":"42:05","speaker_name":"Viktor Petersson","speaker_id":0},{"sentence":"The most common functions is rate and irate.","startTime":"42:05","endTime":"42:08","speaker_name":"Viktor Petersson","speaker_id":0},{"sentence":"Do you want to just help explain the difference between the two just quickly for.","startTime":"42:08","endTime":"42:13","speaker_name":"Viktor Petersson","speaker_id":0},{"sentence":"Yeah, maybe people like myself, maybe I.","startTime":"42:13","endTime":"42:15","speaker_name":"Viktor Petersson","speaker_id":0},{"sentence":"Should also if you go to my YouTube channel, I think it's so PromLabs is the channel name on YouTube.","startTime":"42:15","endTime":"42:22","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"I have a whole video about the three types of different rates and also the increase function that explains the exact differences.","startTime":"42:22","endTime":"42:29","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"Basically there are three different functions for telling how fast the counter is going up and those are rate, irate and increase.","startTime":"42:30","endTime":"42:39","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"The rate function gives you.","startTime":"42:39","endTime":"42:41","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"Maybe I should share my screen again because it's so graphically demonstratable.","startTime":"42:42","endTime":"42:47","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"That totally makes sense.","startTime":"42:48","endTime":"42:50","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"So I'll just do that again.","startTime":"42:50","endTime":"42:51","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"So let me know again once you see stuff these other ones here.","startTime":"42:51","endTime":"42:57","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"So now I'm just in a vanilla Prometheus server expression entry interface.","startTime":"42:57","endTime":"43:02","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"So let's say I do the rate over these request rate metrics that I saw that I used earlier.","startTime":"43:02","endTime":"43:09","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"What we're doing now is at every resolution step in the graph we are basically selecting five minutes of past data.","startTime":"43:11","endTime":"43:20","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"So if we're producing like this output point in the graph, we're looking five minutes backwards.","startTime":"43:20","endTime":"43:24","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"We're taking all the raw data, the only increasing counters, and we are kind of calculating an average of how fast per second is the counter or each of these counters increasing under that window.","startTime":"43:24","endTime":"43:37","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"And that per second increase value becomes the output point for this step in the graph.","startTime":"43:37","endTime":"43:44","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"And it can make these resolution steps a little bit more visible here.","startTime":"43:44","endTime":"43:47","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"If I set the resolution to five minutes, then we get a lot of explicitly visible resolution steps along the graph.","startTime":"43:47","endTime":"43:55","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"So you can really imagine that every one of these steps we look back this amount of time that I specify the expression.","startTime":"43:55","endTime":"44:02","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"And yeah, in this case this would be an entire step because this is five minutes and this is five minutes.","startTime":"44:03","endTime":"44:10","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"And it just summarizes that entire steps samples into an average per second value.","startTime":"44:11","endTime":"44:18","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"Now what happens if I make this window a little bit smaller, but also I will go back to the original resolution and start with five minutes.","startTime":"44:18","endTime":"44:30","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"So five minutes, I'm smoothing over five minutes so it will be relatively smooth.","startTime":"44:30","endTime":"44:36","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"And if I make this averaging window smaller, like one minute, I get more spiky rates because now I'm averaging over fewer samples.","startTime":"44:36","endTime":"44:45","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"Same If I do 30 seconds, then it gets like really spiky.","startTime":"44:45","endTime":"44:49","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"And I only scrape data every 15 seconds in this Prometheus server.","startTime":"44:49","endTime":"44:53","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"So eventually I even have to be careful that I don't make the window too small, because otherwise I will not always at every point be lucky enough to actually span two samples with my averaging window.","startTime":"44:53","endTime":"45:09","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"Right.","startTime":"45:09","endTime":"45:09","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"If they're 15 seconds apart, it could be that there are not two of them under a 20 seconds window.","startTime":"45:09","endTime":"45:15","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"This gets exacerbated if I do a 16 seconds window.","startTime":"45:15","endTime":"45:18","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"Then only sometimes are they actually going to be two samples under the rate window to be able to even compute a rate.","startTime":"45:19","endTime":"45:25","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"And the graph will mostly be cappy.","startTime":"45:25","endTime":"45:28","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"So you do have to choose your window large enough to at least robustly select two samples.","startTime":"45:28","endTime":"45:35","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"But what if you wanted to say something like, hey, I want my graph to behave as spiky as possible.","startTime":"45:36","endTime":"45:44","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"Like react as much as possible to the most two recent data points while still not having to care too much about how small?","startTime":"45:44","endTime":"45:53","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"Exactly.","startTime":"45:53","endTime":"45:54","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"I can choose this rate window.","startTime":"45:54","endTime":"45:56","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"So that's the irate function, or also called instant rate function.","startTime":"45:56","endTime":"46:01","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"It also gives you a per second rate of increase.","startTime":"46:01","endTime":"46:04","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"But under this provided window here, it will only ever choose the latest two samples and see how much per second does the counter increase between them.","startTime":"46:05","endTime":"46:16","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"So it doesn't matter anymore how large or small you make this here you will always get the same result providing I anchor it to a constant time here.","startTime":"46:17","endTime":"46:27","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"So one hour versus one minute it will look the same as long as you make this window large enough to always cover two data points.","startTime":"46:27","endTime":"46:36","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"Again, if I make it too small, you will run into issues again.","startTime":"46:36","endTime":"46:39","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"But that's basically what the irate function is about.","startTime":"46:39","endTime":"46:42","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"Normally I would not recommend using it unless you have a specific reason because it will skip over most of the data in your range interval here you might have five minutes worth of data in there and but now you're only looking at the latest two data points in there to give you some answer and they might not really be representative.","startTime":"46:43","endTime":"47:03","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"And so usually people use rate.","startTime":"47:04","endTime":"47:07","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"It's good to average or smooth over some amount of time.","startTime":"47:07","endTime":"47:10","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"Not too long maybe.","startTime":"47:10","endTime":"47:12","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"But if you are in a super zoomed in graph like this and you want to see really the latest developments, then maybe irete can make sense at times, right?","startTime":"47:13","endTime":"47:24","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"But yeah, use it sparingly.","startTime":"47:25","endTime":"47:27","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"And then a last function called increase is basically identical to rate except that it does not convert the output unit to per second.","startTime":"47:27","endTime":"47:39","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"So the shape of the graph, if I go back to the one hour graph, let's say, or let's go to two hours, the shape will look identical with rate and increase here.","startTime":"47:40","endTime":"47:50","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"The only difference is the Y axis.","startTime":"47:51","endTime":"47:53","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"So here we get a per second Y axis and if I go to increase with the same window now we get increases not per second but per one minute because I have a one minute window here.","startTime":"47:54","endTime":"48:07","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"Or if I do 15m, then we would have increases per 15 minutes.","startTime":"48:07","endTime":"48:13","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"And so you see again, but this kind of intermingles two aspects.","startTime":"48:13","endTime":"48:18","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"We intermingle the smoothing window size so how smooth the graph will look and the output unit.","startTime":"48:18","endTime":"48:25","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"So if I change this window, I will both change the smoothing and what unit I actually output, which at times might be actually what you want, right?","startTime":"48:26","endTime":"48:35","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"What's the total increase over one day or so?","startTime":"48:35","endTime":"48:38","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"Then you don't have to multiply it in the end with the number of seconds in a day, but at other times that's not actually what you want.","startTime":"48:38","endTime":"48:45","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"So most of the time by default the rate function is actually great.","startTime":"48:45","endTime":"48:50","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"It gives you a predictable per second output unit and that's great if you then want to combine it and divide it and so on with other constructs in your query.","startTime":"48:50","endTime":"49:02","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"If you keep everything at these base units, everything will stay more predictable and yeah, so that's why most of the time you will see just the rate function.","startTime":"49:02","endTime":"49:12","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"Got it.","startTime":"49:13","endTime":"49:13","speaker_name":"Viktor Petersson","speaker_id":0},{"sentence":"Okay, that's really cool.","startTime":"49:13","endTime":"49:15","speaker_name":"Viktor Petersson","speaker_id":0},{"sentence":"Any other promql questions?","startTime":"49:15","endTime":"49:17","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"Or answer the screen.","startTime":"49:17","endTime":"49:20","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"Yeah, I think rate, I would presume is your starting point for a lot of metrics where when you're starting out, I guess that is the function that you start using in most common.","startTime":"49:20","endTime":"49:36","speaker_name":"Viktor Petersson","speaker_id":0},{"sentence":"Most common, yeah.","startTime":"49:36","endTime":"49:37","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"Rate and then summing of rates I would say is one of the most common things you will see.","startTime":"49:38","endTime":"49:42","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"Yeah, cool.","startTime":"49:42","endTime":"49:44","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"No, I think that's a good.","startTime":"49:44","endTime":"49:45","speaker_name":"Viktor Petersson","speaker_id":0},{"sentence":"That's a good crash course and quick introduction.","startTime":"49:45","endTime":"49:47","speaker_name":"Viktor Petersson","speaker_id":0},{"sentence":"Nice.","startTime":"49:47","endTime":"49:48","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"Cool.","startTime":"49:48","endTime":"49:49","speaker_name":"Viktor Petersson","speaker_id":0},{"sentence":"Let's turn our eyes to the future a little bit and I'm curious about a few things to pick your brains on.","startTime":"49:49","endTime":"49:55","speaker_name":"Viktor Petersson","speaker_id":0},{"sentence":"The first one is EBPF is all the rave these days in observability.","startTime":"49:56","endTime":"50:02","speaker_name":"Viktor Petersson","speaker_id":0},{"sentence":"Is there any play for Prometheus to tap into EBPF for, I guess collecting metrics with less resource overhead?","startTime":"50:03","endTime":"50:13","speaker_name":"Viktor Petersson","speaker_id":0},{"sentence":"Or how do you see that change in kind of observability in Prometheus?","startTime":"50:13","endTime":"50:17","speaker_name":"Viktor Petersson","speaker_id":0},{"sentence":"Yeah, so myself, I'm not a big EBPF expert, of course it's awesome kernel level interface to allow you to tap into pretty much any place in the kernel and extract information or do stuff, whatever you want in there.","startTime":"50:17","endTime":"50:31","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"There are EPP exporters for Prometheus, so if you just Google EBPF exporter, you will find one by Cloudflare for example.","startTime":"50:31","endTime":"50:40","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"And yeah, you can configure it in different ways to give you all kinds of host metrics.","startTime":"50:40","endTime":"50:46","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"And I would actually also have to read the detailed documentation about what exactly it can do.","startTime":"50:46","endTime":"50:53","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"But yeah, basically it will enable you to collect metrics about all kinds of things you can, you know, instrument with ebpf.","startTime":"50:53","endTime":"51:02","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"You don't anticipate a world where an EBPF based node exporter would replace the regular GO based node exporter in the future?","startTime":"51:03","endTime":"51:12","speaker_name":"Viktor Petersson","speaker_id":0},{"sentence":"It's a good question.","startTime":"51:12","endTime":"51:13","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"I mean, at the moment the question is what would that give us if, you know, if we could get at stats that are not exposed using the current interfaces which are fine, like the PROC file system sys file system and certain syscalls.","startTime":"51:13","endTime":"51:31","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"It could be that there are certain stats in the Linux kernel that we would also want to expose that would be possible in that way.","startTime":"51:31","endTime":"51:39","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"Let me just see if anyone has already added anything EBPF wise to the node exporter.","startTime":"51:39","endTime":"51:45","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"You never know because there's so many different Prometheus components these days.","startTime":"51:45","endTime":"51:50","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"Right?","startTime":"51:50","endTime":"51:51","speaker_name":"Viktor Petersson","speaker_id":0},{"sentence":"Ebp, I don't find anything EBPF at least module wise in the node exporter yet.","startTime":"51:51","endTime":"51:57","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"But of course it makes sense because it's also node level metrics that you might at some point want to put something like that directly into the Node exporter and until that time run the separate EBPF exporter.","startTime":"51:58","endTime":"52:12","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"But yeah, I could guess what are the upsides either being able to get at metrics that you don't otherwise have, being able to get at them without writing as much custom parsing code because it's a bit annoying to parse those proc file system files sometimes and also maybe to get something more efficiently.","startTime":"52:12","endTime":"52:35","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"But so far it has not happened in the node exporter, but totally for it, if it makes sense.","startTime":"52:35","endTime":"52:42","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"I'm just thinking like you could increase the scraping period, for instance, and to get metrics every second instead of every 15 seconds, perhaps without taking the.","startTime":"52:43","endTime":"52:52","speaker_name":"Viktor Petersson","speaker_id":0},{"sentence":"I mean usually that's like most of the time the scraping frequency is not really bottlenecked on the producer of the metrics and more by the Prometheus server being able to ingest a lot of data.","startTime":"52:52","endTime":"53:05","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"It's fairly good at that, but that's still usually the bottleneck.","startTime":"53:05","endTime":"53:10","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"But yeah, there's some modules in the node exporter that take a little bit more time to produce data, which are some of them I think also switched off by default.","startTime":"53:11","endTime":"53:22","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"So it could be that there's.","startTime":"53:22","endTime":"53:24","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"I'm not sure if there's something in there that could be made like way more efficient by ebpf because already the native kernel interface that exposes it, I hope most of those will already be relatively efficient.","startTime":"53:24","endTime":"53:38","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"Fair enough.","startTime":"53:40","endTime":"53:41","speaker_name":"Viktor Petersson","speaker_id":0},{"sentence":"Open telemetry seems to be kind of taken big, well taken.","startTime":"53:43","endTime":"53:49","speaker_name":"Viktor Petersson","speaker_id":0},{"sentence":"Observability kind of at a pretty high pace right now.","startTime":"53:49","endTime":"53:52","speaker_name":"Viktor Petersson","speaker_id":0},{"sentence":"It's gaining a lot of momentum.","startTime":"53:52","endTime":"53:54","speaker_name":"Viktor Petersson","speaker_id":0},{"sentence":"Obviously Prometheus is kind of a building block in that.","startTime":"53:55","endTime":"53:58","speaker_name":"Viktor Petersson","speaker_id":0},{"sentence":"How do you see open telemetry kind of as the observability stack of the future for cloud, native workloads or how do you envision that?","startTime":"53:58","endTime":"54:10","speaker_name":"Viktor Petersson","speaker_id":0},{"sentence":"Yeah, I mean, so open telemetry came from a little bit of a different corner originally.","startTime":"54:11","endTime":"54:16","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"Very tracing focused with open tracing and open senses and then merging into open telemetry.","startTime":"54:17","endTime":"54:23","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"So that was their.","startTime":"54:24","endTime":"54:24","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"The prime kind of initial use case that was most stable.","startTime":"54:24","endTime":"54:28","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"And then there were logs and metrics, with metrics now also being more stable and people adopting it.","startTime":"54:28","endTime":"54:34","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"And they focus a lot on the instrumentation API aspect, like standardizing the instrumentation API.","startTime":"54:34","endTime":"54:44","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"What should it look like to instrument your application and what metadata should there be in certain interfaces for metrics and so on?","startTime":"54:44","endTime":"54:52","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"And in a lot of cases those are similar to what we do in Prometheus, but in some other cases they're a bit different.","startTime":"54:52","endTime":"55:01","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"They have slightly different metric types, they have slightly different allowed character sets, especially in label Names, they can be arbitrary UTF 8 characters if I'm not mistaken.","startTime":"55:01","endTime":"55:14","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"Or at least we want to allow that now in Prometheus as a result of, you know, wanting more open telemetry compatibility.","startTime":"55:14","endTime":"55:21","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"And they also have different standardizations of what labels will you want to always collect about where a given metric came from, the resource label.","startTime":"55:22","endTime":"55:34","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"And in Prometheus we have something similar called target labels that Prometheus attaches to wherever it pulls metrics from.","startTime":"55:36","endTime":"55:44","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"But they're slightly different and they're more of an admin configurable stuff and less standardized.","startTime":"55:44","endTime":"55:51","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"And so now there's efforts in the Prometheus team wanting to of course still be relevant in this world.","startTime":"55:51","endTime":"56:00","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"And people want to use Prometheus as an otL metric store.","startTime":"56:00","endTime":"56:05","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"Prometheus will still only do the metrics part and not logging or tracing, but at least for the metrics part.","startTime":"56:05","endTime":"56:11","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"If you're using oatmeal telemetry to instrument your apps, then we want to be able to store OTAL metrics in a more native and better way.","startTime":"56:11","endTime":"56:23","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"You can already send in an experimental way OTAL metrics to Prometheus.","startTime":"56:23","endTime":"56:28","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"There's an experimental OTAL receiver in there, or there's different ways of making it work.","startTime":"56:28","endTime":"56:34","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"You can either send the OTLP stuff directly to Prometheus using the new experimental interface, or you could bridge it earlier on into a Prometheus native remote write format and send that to Prometheus.","startTime":"56:34","endTime":"56:46","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"But we want to in Prometheus extend the data model somehow to allow more characters so we are able to store more of the data model that OTAL has.","startTime":"56:47","endTime":"57:00","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"For metrics, we're looking at ways of supporting what they call, what's it called, a delta, not delta cardinality.","startTime":"57:00","endTime":"57:10","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"When you count like either when you send absolute counters that only increase over all of time, or you only send deltas from one push to the next.","startTime":"57:11","endTime":"57:21","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"And in a push based monitoring system that's easier because your process, it counts a lot of things from one push to the next and then it's, it resets the counter to zero and so it will only like, at every push it will send the delta that has happened between two pushes.","startTime":"57:21","endTime":"57:37","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"Right?","startTime":"57:37","endTime":"57:37","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"And the problem with a pull based monitoring system like Prometheus is that pools are supposed to be idempotent and any service process that is being monitored by Prometheus could be monitored by either 0, Promethei or like by many Prometheus servers at the same time.","startTime":"57:39","endTime":"57:57","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"And it shouldn't then any scrape from a Prometheus server shouldn't Just reset whatever the current count is.","startTime":"57:57","endTime":"58:03","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"So we have to add an additional little translation layer in there to potentially transform these delta temporality, I think counters into absolute counters again or support them natively or something like this.","startTime":"58:03","endTime":"58:23","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"So this is still being hashed out and there's a couple of other things around mapping these resource and target labels.","startTime":"58:23","endTime":"58:29","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"Like do we always take this huge amount of hotel labels and just put it into Prometheus metric?","startTime":"58:29","endTime":"58:35","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"That would get super messy.","startTime":"58:35","endTime":"58:37","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"Or do we allow users to map like configure which ones to map over?","startTime":"58:37","endTime":"58:42","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"And how do we always just put it into a separate metric that you then have to join in?","startTime":"58:42","endTime":"58:47","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"That's also annoying.","startTime":"58:47","endTime":"58:48","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"So there's definitely some little incompatibilities that will make, you know, I would still recommend people like use native Prometheus instrumentation.","startTime":"58:48","endTime":"58:59","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"It's going to be way less code and it's going to work faster and more simple.","startTime":"58:59","endTime":"59:03","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"But if you do want to use otel, like if you just are interested in the metrics use case and you still want to use otel, then we are still going to work on making that better.","startTime":"59:04","endTime":"59:15","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"Okay, makes sense.","startTime":"59:16","endTime":"59:17","speaker_name":"Viktor Petersson","speaker_id":0},{"sentence":"Yeah, I guess that's fundamentally a different thing between push and pull.","startTime":"59:17","endTime":"59:20","speaker_name":"Viktor Petersson","speaker_id":0},{"sentence":"I mean that was at least in our use case of screenly, that was a bit of an inconvenient thing.","startTime":"59:20","endTime":"59:26","speaker_name":"Viktor Petersson","speaker_id":0},{"sentence":"When you work with edge devices, for instance, you can't scrape them because obviously they're not in your data center.","startTime":"59:26","endTime":"59:32","speaker_name":"Viktor Petersson","speaker_id":0},{"sentence":"So the push ball there makes a lot more sense for our use case.","startTime":"59:32","endTime":"59:35","speaker_name":"Viktor Petersson","speaker_id":0},{"sentence":"But I know Prometheus heavily favors pull versus push.","startTime":"59:35","endTime":"59:40","speaker_name":"Viktor Petersson","speaker_id":0},{"sentence":"Yep.","startTime":"59:40","endTime":"59:41","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"For different reasons.","startTime":"59:41","endTime":"59:42","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"But yeah, absolutely, absolutely.","startTime":"59:42","endTime":"59:44","speaker_name":"Viktor Petersson","speaker_id":0},{"sentence":"But I'm saying that might push that push use case a bit further, which we would welcome.","startTime":"59:44","endTime":"59:51","speaker_name":"Viktor Petersson","speaker_id":0},{"sentence":"Makes sense for anyone with like super highly segmented networks or you know, end devices at customers and so on, where, you know, polling is really great if you can reach everything easily in your own data center and so on.","startTime":"59:52","endTime":"01:00:04","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"But yeah, it gets harder as you break things up.","startTime":"01:00:04","endTime":"01:00:07","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"Absolutely, absolutely.","startTime":"01:00:08","endTime":"01:00:09","speaker_name":"Viktor Petersson","speaker_id":0},{"sentence":"There's another project that I know you've been a little bit touching upon as well.","startTime":"01:00:09","endTime":"01:00:13","speaker_name":"Viktor Petersson","speaker_id":0},{"sentence":"It's OpenMetrics.","startTime":"01:00:13","endTime":"01:00:15","speaker_name":"Viktor Petersson","speaker_id":0},{"sentence":"Do you want to speak a bit about that and how that kind of.","startTime":"01:00:15","endTime":"01:00:18","speaker_name":"Viktor Petersson","speaker_id":0},{"sentence":"There's a lot of open here, but.","startTime":"01:00:18","endTime":"01:00:20","speaker_name":"Viktor Petersson","speaker_id":0},{"sentence":"How that relates to the whole openmetrics was an idea of actually taking what we had as Prometheus metrics text transfer protocol and just standardizing it more with.","startTime":"01:00:21","endTime":"01:00:34","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"With some changes requested by other parties and stakeholders.","startTime":"01:00:34","endTime":"01:00:39","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"So this was an initiative started by Richard Hartman of the Prometheus project and he got others together from other companies and said, hey, let's do an RFC Internet standard.","startTime":"01:00:39","endTime":"01:00:48","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"And it made it pretty far and it's also supported by Prometheus, but by now basically it was decided by the Prometheus team and the Open Metrics team.","startTime":"01:00:48","endTime":"01:01:01","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"Like hey, I think we still want to do some things differently and let's just actually merge Open Metrics back into Prometheus again and not have it as a separate project anymore.","startTime":"01:01:01","endTime":"01:01:12","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"So it's just going to be archived in the cncf and it's still, I think explored a lot of the needs of, you know, if we want to standardize a metrics transfer protocol or evolve Prometheuses further, what are needs that other parties actually want in such a thing.","startTime":"01:01:12","endTime":"01:01:33","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"And so it did help, but it will no longer exist to my knowledge, like as a separate project.","startTime":"01:01:33","endTime":"01:01:41","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"Okay, but it sounds like you made headways in terms of that you can now push Prometheus style metrics to most cloud vendors, which I guess it sounds like that kind of paved the way to that.","startTime":"01:01:41","endTime":"01:01:54","speaker_name":"Viktor Petersson","speaker_id":0},{"sentence":"Yeah, that's a different thing because like the Open Metrics system is so you have the Prometheus server and you have your monitor target.","startTime":"01:01:54","endTime":"01:02:02","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"That's what happens between those two.","startTime":"01:02:02","endTime":"01:02:04","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"And then the protocol that we speak to the outside world, that's the remote write protocol.","startTime":"01:02:04","endTime":"01:02:08","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"So that's a totally different one that is independent of the scrape format.","startTime":"01:02:08","endTime":"01:02:15","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"Right.","startTime":"01:02:15","endTime":"01:02:15","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"It has slightly different needs as well because you will want to be able to send multiple samples from multiple scrapes for many more different time series over this remote write protocol.","startTime":"01:02:15","endTime":"01:02:27","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"Whereas the pull based open Metrics or the previous text based format on which it is based, they're really for going to a single monitored process or target and pulling its current metric state.","startTime":"01:02:27","endTime":"01:02:43","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"Just the one number for each metric at this point in time.","startTime":"01:02:43","endTime":"01:02:47","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"Okay, that's perfect.","startTime":"01:02:47","endTime":"01:02:49","speaker_name":"Viktor Petersson","speaker_id":0},{"sentence":"I think we're up on time.","startTime":"01:02:50","endTime":"01:02:51","speaker_name":"Viktor Petersson","speaker_id":0},{"sentence":"But it's been very informational and helpful for me and I think that's really good.","startTime":"01:02:51","endTime":"01:02:57","speaker_name":"Viktor Petersson","speaker_id":0},{"sentence":"And do you want to do a quick shout up if somebody needs consulting service around Prometheus where they can get in touch with you and how they can.","startTime":"01:02:57","endTime":"01:03:05","speaker_name":"Viktor Petersson","speaker_id":0},{"sentence":"Yeah, how they can.","startTime":"01:03:05","endTime":"01:03:06","speaker_name":"Viktor Petersson","speaker_id":0},{"sentence":"Oh yeah.","startTime":"01:03:06","endTime":"01:03:07","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"Take their Prometheus game to the next level?","startTime":"01:03:07","endTime":"01:03:09","speaker_name":"Viktor Petersson","speaker_id":0},{"sentence":"I'd love to.","startTime":"01:03:09","endTime":"01:03:09","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"So I mean these days I mostly do training around Prometheus so no longer just, you know, per hour consulting.","startTime":"01:03:09","endTime":"01:03:16","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"I have two main things I do besides other partnerships and still open source development.","startTime":"01:03:16","endTime":"01:03:21","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"So those are live trainings around the PromQL query language where I really explain over a multi hour session kind of with a setup like this here right now and screen sharing and material and everything, how PromQL works, how you can use it, all the different pitfalls with exercises and so on.","startTime":"01:03:21","endTime":"01:03:41","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"So I do those, you know, quite often with teams in companies.","startTime":"01:03:41","endTime":"01:03:45","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"And the other thing is, so you can find that@promlabs.com and you go to, I think at the very top there's a live trainings link and I also have self paced courses, another link on the side and that leads you to training.promlabs.com and those are training modules.","startTime":"01:03:46","endTime":"01:04:05","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"So courses that you can either buy as an individual or you can buy for your entire engineering team as a company to learn all the basics of Prometheus, like from what is Prometheus to all the advanced PromQL stuff and alerting and dashboarding and node exporter metrics and remote storage and all that.","startTime":"01:04:05","endTime":"01:04:25","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"So it's textual and images and screenshots and quizzes and interactive stuff where you set up all these components and string them together and build setups.","startTime":"01:04:26","endTime":"01:04:37","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"So it's not video content.","startTime":"01:04:37","endTime":"01:04:39","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"But that makes it actually possible for me to keep up to date all the time, which would be really hard with videos.","startTime":"01:04:39","endTime":"01:04:46","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"So yeah, individuals buy them and companies do as well.","startTime":"01:04:46","endTime":"01:04:50","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"And of course I can recommend them.","startTime":"01:04:50","endTime":"01:04:52","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"Perfect.","startTime":"01:04:53","endTime":"01:04:54","speaker_name":"Viktor Petersson","speaker_id":0},{"sentence":"Thank you so much for your time today, Julius.","startTime":"01:04:54","endTime":"01:04:56","speaker_name":"Viktor Petersson","speaker_id":0},{"sentence":"Much pleasure having you in the show and I talk to you soon.","startTime":"01:04:57","endTime":"01:05:00","speaker_name":"Viktor Petersson","speaker_id":0},{"sentence":"Alrighty.","startTime":"01:05:00","endTime":"01:05:00","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"Thank you so much.","startTime":"01:05:00","endTime":"01:05:01","speaker_name":"Viktor Petersson","speaker_id":0},{"sentence":"See you.","startTime":"01:05:01","endTime":"01:05:01","speaker_name":"Julius Volz","speaker_id":1},{"sentence":"Thank you.","startTime":"01:05:01","endTime":"01:05:02","speaker_name":"Viktor Petersson","speaker_id":0},{"sentence":"Bye.","startTime":"01:05:02","endTime":"01:05:02","speaker_name":"Julius Volz","speaker_id":1}]